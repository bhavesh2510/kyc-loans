[{"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\index.js":"1","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Routes.js":"2","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\index.js":"3","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\BusinessDetails.js":"4","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\CustomerDetails.js":"5","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\BusinessActivities.js":"6","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\BankDetails.js":"7","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\OwnershipDetails.js":"8","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\DocumentsDeclaration.js":"9","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\services\\service.js":"10","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\services\\const.js":"11","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\KycSuccess.js":"12","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\RestrictUser.js":"13","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\index.js":"14","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Routes.js":"15","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\KycSuccess.js":"16","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\index.js":"17","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\CustomerDetails.js":"18","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\BusinessDetails.js":"19","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\DocumentsDeclaration.js":"20","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\RestrictUser.js":"21","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\services\\service.js":"22","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\services\\const.js":"23","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\BusinessProperty.js":"24","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\PrincipalOwner.js":"25","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\ProcessingInformation.js":"26","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\MerchantQuestionnaire.js":"27"},{"size":925,"mtime":1630049559514,"results":"28","hashOfConfig":"29"},{"size":1038,"mtime":1631186814865,"results":"30","hashOfConfig":"29"},{"size":430,"mtime":1628850787102,"results":"31","hashOfConfig":"29"},{"size":36680,"mtime":1633613081079,"results":"32","hashOfConfig":"29"},{"size":20207,"mtime":1633616688802,"results":"33","hashOfConfig":"29"},{"size":23128,"mtime":1633613159194,"results":"34","hashOfConfig":"29"},{"size":16762,"mtime":1633613113588,"results":"35","hashOfConfig":"29"},{"size":38950,"mtime":1633613200060,"results":"36","hashOfConfig":"29"},{"size":28663,"mtime":1633610224541,"results":"37","hashOfConfig":"29"},{"size":1439,"mtime":1633012953222,"results":"38","hashOfConfig":"29"},{"size":241,"mtime":1631620615102,"results":"39","hashOfConfig":"29"},{"size":680,"mtime":1629960252614,"results":"40","hashOfConfig":"29"},{"size":556,"mtime":1630051116121,"results":"41","hashOfConfig":"29"},{"size":3463,"mtime":1652884343518,"results":"42","hashOfConfig":"43"},{"size":1259,"mtime":1639559213055,"results":"44","hashOfConfig":"43"},{"size":689,"mtime":1641372796149,"results":"45","hashOfConfig":"43"},{"size":548,"mtime":1639559171708,"results":"46","hashOfConfig":"43"},{"size":22990,"mtime":1644504365979,"results":"47","hashOfConfig":"43"},{"size":32451,"mtime":1641820630138,"results":"48","hashOfConfig":"43"},{"size":22270,"mtime":1647265457325,"results":"49","hashOfConfig":"43"},{"size":556,"mtime":1639380179573,"results":"50","hashOfConfig":"43"},{"size":1449,"mtime":1641969082727,"results":"51","hashOfConfig":"43"},{"size":241,"mtime":1639380179614,"results":"52","hashOfConfig":"43"},{"size":11948,"mtime":1641821892617,"results":"53","hashOfConfig":"43"},{"size":39065,"mtime":1642000383918,"results":"54","hashOfConfig":"43"},{"size":20283,"mtime":1641365149078,"results":"55","hashOfConfig":"43"},{"size":23735,"mtime":1641367162783,"results":"56","hashOfConfig":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"yt9x93",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"3mm407",{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\index.js",[],["119","120"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Routes.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\index.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\BusinessDetails.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import React, { Component, useEffect, useState } from 'react';\r\nimport Service from '../services/service';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport localforage from 'localforage';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { stat } from 'fs';\r\nimport RestrictUser from './RestrictUser';\r\nimport axios from 'axios';\r\ntoast.configure();\r\n\r\nconst BusinessDetails = () => {\r\n  const history = useHistory();\r\n  let countryCode = '';\r\n  let company = '';\r\n  let country = '';\r\n\r\n  const [error, setError] = useState({});\r\n  //   const { country } = state;\r\n\r\n  const x = JSON.parse(localStorage.getItem('previous_data'));\r\n\r\n  const [state, setState] = useState({\r\n    companynumber: '',\r\n    dateofincorporation: '',\r\n    address1: '',\r\n    city: '',\r\n    post_code: '',\r\n    vatnumber: '',\r\n    dbalegalname: '',\r\n    dbaaddress1: '',\r\n    dbaaddress2: '',\r\n    dbacity: '',\r\n    dbapost_code: '',\r\n    websitename: '',\r\n    country: '',\r\n    company_name: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (x) {\r\n      country = x.country_Incorporation;\r\n      setState({\r\n        ...state,\r\n        companynumber: x.company_number,\r\n        dateofincorporation: x.incorporation_date,\r\n        address1: x.address1,\r\n        city: x.city,\r\n        post_code: x.post_code,\r\n        vatnumber: x.vat_number,\r\n        dbalegalname: x.dbalegalname,\r\n        dbaaddress: '',\r\n        websitename: x.website,\r\n        country: x.country_Incorporation,\r\n        company_name: x.company_name,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('state in bd', state);\r\n  }, [state]);\r\n\r\n  // const {\r\n  //   companynumber,\r\n  //   dateofincorporation,\r\n  //   address1,\r\n  //   city,\r\n  //   post_code,\r\n  //   vatnumber,\r\n  //   dbalegalname,\r\n  //   dbaaddress,\r\n  //   websitename,\r\n  //   country,\r\n  // } = state;\r\n\r\n  //   const handleSubmit = handleSubmit.bind(this);\r\n  //   const handleInputChanged = handleInputChanged.bind(this);\r\n  //   const getCompanyData = getCompanyData.bind(this);\r\n  //   const setValues = setValues.bind(this);\r\n\r\n  const handleSubmit = (e) => {\r\n    // const { history } = this.props;\r\n\r\n    const id = JSON.parse(localStorage.getItem('kyc_id'));\r\n    // console.log('x is', y);\r\n    const finalId = id == null ? x.id : id;\r\n    console.log('finalId is', finalId);\r\n\r\n    var validForm = true;\r\n    console.log('check', state.country);\r\n    e.preventDefault();\r\n    if (!state.country) {\r\n      setError({ ...error, countryError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.companynumber) {\r\n      setError({ ...error, companynumberError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.dateofincorporation) {\r\n      setError({\r\n        ...error,\r\n        dateofincorporationError: 'This field is required.',\r\n      });\r\n      validForm = false;\r\n    }\r\n    if (!state.address1 == true) {\r\n      setError({ ...error, address1Error: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.city) {\r\n      setError({ ...error, cityError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.post_code) {\r\n      setError({ ...error, post_codeError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.vatnumber) {\r\n      setError({ ...error, vatnumberError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (/\\d/.test(state.city)) {\r\n      setError({ ...error, cityError: 'Please enter a valid value.' });\r\n      validForm = false;\r\n    }\r\n    if (/\\d/.test(state.dbacity)) {\r\n      setError({ ...error, dbacityError: 'Please enter a valid value.' });\r\n      validForm = false;\r\n    }\r\n\r\n    if (validForm) {\r\n      var axios = require('axios');\r\n\r\n      var data = {\r\n        id: `${finalId}`,\r\n        ip: `${state.ip}`,\r\n        location: `${state.location}`,\r\n        country_Incorporation: `${state.country}`,\r\n        company_number: `${state.companynumber}`,\r\n        company_name: `${state.company_name}`,\r\n        incorporation_date: `${state.dateofincorporation}`,\r\n        address1: `${state.address1}`,\r\n        address2: `${state.address2}`,\r\n        city: `${state.city}`,\r\n        post_code: `${state.post_code}`,\r\n        vat_number: `${state.vatnumber}`,\r\n        dba: `${state.dbalegalname}`,\r\n        dbaaddress1: `${state.dbaaddress1}`,\r\n        dbaaddress2: `${state.dbaaddress2}`,\r\n        dbacity: `${state.dbacity}`,\r\n        dbapost_code: `${state.dbapost_code}`,\r\n        website: `${state.websitename}`,\r\n        status: 'incomplete',\r\n      };\r\n\r\n      var config = {\r\n        method: 'put',\r\n        mode: 'no-cors',\r\n        url: 'http://hrm.zotto.io/api/businessdetails',\r\n        headers: {\r\n          Authorization:\r\n            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      axios(config)\r\n        .then(function (response) {\r\n          console.log('response of update', response);\r\n          toast.success('Records added successfully', {\r\n            position: 'top-right',\r\n            autoClose: 1000,\r\n          });\r\n\r\n          const prev_data = JSON.parse(localStorage.getItem('previous_data'));\r\n\r\n          var axios = require('axios');\r\n          var data = JSON.stringify({\r\n            email: `${x.email}`,\r\n          });\r\n\r\n          var config = {\r\n            method: 'get',\r\n            mode: 'no-cors',\r\n            url: `http://pay.cibopay.com/getData/shareholderInfo/regnumber/${state.companynumber}`,\r\n            headers: {\r\n              'Access-Control-Allow-Origin': '*',\r\n              'Content-Type': 'application/x-www-form-urlencoded',\r\n              Cookie: 'ci_session=kihkhpchd8cv0ekcb39q5kll9f97begm',\r\n            },\r\n            data: data,\r\n          };\r\n\r\n          axios(config)\r\n            .then(function (response) {\r\n              console.log('reg number', response.data.DATA.items);\r\n              var array_data = [];\r\n              response.data.DATA.items.map((currentvalue) => {\r\n                array_data.push({\r\n                  kyc_id: '',\r\n\r\n                  name: currentvalue.name,\r\n                  percentage: '',\r\n                  address1: currentvalue.address.address_line_1,\r\n                  address2: currentvalue.address.address_line_2,\r\n                  city: '',\r\n                  zipcode: currentvalue.address.postal_code,\r\n                  country: currentvalue.address.country,\r\n                  passport_number: '',\r\n                  nationality: currentvalue.nationality,\r\n                  authorised_signatory: '',\r\n                  beneficial_owner: '',\r\n                  director: '',\r\n\r\n                  email: '',\r\n                  phone: '',\r\n                });\r\n              });\r\n\r\n              console.log('data is', array_data);\r\n              localStorage.setItem(\r\n                'previous_data_if_available_shareholder',\r\n                JSON.stringify(array_data)\r\n              );\r\n            })\r\n            .catch(function (error) {\r\n              localStorage.setItem(\r\n                'previous_data_if_available_shareholder',\r\n                JSON.stringify('')\r\n              );\r\n            });\r\n\r\n          history.push(`/business_activities`);\r\n        })\r\n        .catch(function (error) {\r\n          console.log('response of add', error);\r\n\r\n          toast.error('Something went wrong.', {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n          });\r\n        });\r\n    }\r\n\r\n    var axios = require('axios');\r\n    const email = JSON.parse(localStorage.getItem('add_user'));\r\n\r\n    var data = {\r\n      email: `${email.companyemail}`,\r\n    };\r\n\r\n    var config = {\r\n      method: 'post',\r\n      mode: 'no-cors',\r\n      url: 'http://hrm.zotto.io/api/get',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        Authorization:\r\n          'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log('response of get', response.data);\r\n\r\n        localStorage.setItem(\r\n          'previous_data',\r\n          JSON.stringify(response.data.Kyc)\r\n        );\r\n        localStorage.setItem(\r\n          'previous_data_shareholder',\r\n          JSON.stringify(response.data.Shareholders)\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log('error of get', error);\r\n      });\r\n  };\r\n\r\n  const handleInputChanged = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    setError({\r\n      ...error,\r\n      companynumberError: '',\r\n      dbacityError: '',\r\n      dateofincorporationError: '',\r\n      address1Error: '',\r\n      vatnumberError: '',\r\n      cityError: '',\r\n      post_codeError: '',\r\n    });\r\n    // const prev_data = JSON.parse(localStorage.getItem('add_user'));\r\n    // console.log('target name', event.target.name);\r\n    // if (event.target.name == 'companynumber') {\r\n    //   if (state.country == 'DK') {\r\n    //     var axios = require('axios');\r\n    //     var data = JSON.stringify({\r\n    //       email: `${prev_data.companyemail}`,\r\n    //     });\r\n\r\n    //     var config = {\r\n    //       method: 'get',\r\n    //       url: `https://pay.cibopay.com/getData/cvrsearch/regnumber/${event.target.value}`,\r\n    //       headers: {\r\n    //         'Content-Type': 'application/x-www-form-urlencoded',\r\n    //       },\r\n    //       data: data,\r\n    //     };\r\n\r\n    //     axios(config)\r\n    //       .then(function (response) {\r\n    //         console.log('response of new api', response);\r\n    //         // if (!response.data.error) {\r\n    //         //   setState({\r\n    //         //     ...state,\r\n\r\n    //         //     dateofincorporation: response.data.startdate\r\n    //         //       ? response.data.startdate\r\n    //         //       : '',\r\n    //         //     address1: response.data.address ? response.data.address : '',\r\n    //         //     city: response.data.city ? response.data.city : '',\r\n    //         //     post_code: response.data.zipcode ? response.data.zipcode : '',\r\n    //         //     vatnumber: response.data.vat ? response.data.vat : '',\r\n    //         //     company_name: response.data.name ? response.data.name : '',\r\n    //         //   });\r\n    //         // }\r\n    //       })\r\n    //       .catch(function (error) {\r\n    //         console.log(error);\r\n    //       });\r\n    //   } else if (state.country == 'GB') {\r\n    //     var axios = require('axios');\r\n    //     var data = JSON.stringify({\r\n    //       email: `${prev_data.companyemail}`,\r\n    //     });\r\n\r\n    //     var config = {\r\n    //       method: 'get',\r\n    //       url: `https://pay.cibopay.com/getData/search/regnumber/${event.target.value}`,\r\n    //       headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //         Cookie: 'ci_session=kihkhpchd8cv0ekcb39q5kll9f97begm',\r\n    //       },\r\n    //       data: data,\r\n    //     };\r\n\r\n    //     axios(config)\r\n    //       .then(function (response) {\r\n    //         console.log('reg number', response.data.DATA);\r\n\r\n    //         if (!response.data.DATA.errors) {\r\n    //           setState({\r\n    //             ...state,\r\n    //             companynumber: response.data.DATA.company_number,\r\n    //             dateofincorporation: response.data.DATA.date_of_creation,\r\n    //             address1:\r\n    //               response.data.DATA.registered_office_address.address_line_1,\r\n\r\n    //             post_code:\r\n    //               response.data.DATA.registered_office_address.postal_code,\r\n    //             vatnumber: x.vat_number,\r\n\r\n    //             company_name: response.data.DATA.company_name,\r\n    //           });\r\n    //         }\r\n    //       })\r\n    //       .catch(function (error) {\r\n    //         console.log(error);\r\n    //       });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  const getCompanyData = (event) => {\r\n    console.log('data in blur', event.target.value);\r\n    const prev_data = JSON.parse(localStorage.getItem('add_user'));\r\n    console.log('target name', event.target.name);\r\n    if (event.target.name == 'companynumber') {\r\n      if (state.country == 'DK') {\r\n        var axios = require('axios');\r\n        var data = JSON.stringify({\r\n          email: `${prev_data.companyemail}`,\r\n        });\r\n\r\n        var config = {\r\n          method: 'get',\r\n          url: `https://pay.cibopay.com/getData/cvrsearch/regnumber/${event.target.value}`,\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Access-Control-Allow-Origin': '*',\r\n          },\r\n          data: data,\r\n        };\r\n\r\n        axios(config)\r\n          .then(function (response) {\r\n            console.log('response of new api', response);\r\n            setState({\r\n              ...state,\r\n              companynumber: event.target.value,\r\n              city: response.data.DATA.city,\r\n              dateofincorporation: response.data.DATA.startdate,\r\n              address1: response.data.DATA.address,\r\n\r\n              post_code: response.data.DATA.zipcode,\r\n              vatnumber: response.data.DATA.vat,\r\n\r\n              company_name: response.data.DATA.name,\r\n            });\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (state.country == 'GB') {\r\n        var axios = require('axios');\r\n        var data = JSON.stringify({\r\n          email: `${prev_data.companyemail}`,\r\n        });\r\n\r\n        var config = {\r\n          mode: 'no-cors',\r\n          method: 'get',\r\n          url: `https://pay.cibopay.com/getData/search/regnumber/${event.target.value}`,\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            Cookie: 'ci_session=kihkhpchd8cv0ekcb39q5kll9f97begm',\r\n          },\r\n          data: data,\r\n        };\r\n\r\n        axios(config)\r\n          .then(function (response) {\r\n            console.log('reg number', response.data.DATA);\r\n\r\n            if (!response.data.DATA.errors) {\r\n              setState({\r\n                ...state,\r\n                companynumber: response.data.DATA.company_number,\r\n                dateofincorporation: response.data.DATA.date_of_creation,\r\n                address1:\r\n                  response.data.DATA.registered_office_address.address_line_1,\r\n                city: response.data.DATA.registered_office_address.locality,\r\n                post_code:\r\n                  response.data.DATA.registered_office_address.postal_code,\r\n                vatnumber: x.vat_number,\r\n\r\n                company_name: response.data.DATA.company_name,\r\n              });\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const getFormData = (company) => {\r\n    if (company && countryCode === 'DK') {\r\n      Service.getData(countryCode, company)\r\n        .then((response) => {\r\n          localforage.removeItem('dk_comp_owners');\r\n          localforage.setItem('dk_comp_owners', response.data.owners);\r\n          if (!response.data.error) {\r\n            setState({\r\n              ...state,\r\n\r\n              dateofincorporation: response.data.startdate\r\n                ? response.data.startdate\r\n                : '',\r\n              address1: response.data.address ? response.data.address : '',\r\n              city: response.data.city ? response.data.city : '',\r\n              post_code: response.data.zipcode ? response.data.zipcode : '',\r\n              vatnumber: response.data.vat ? response.data.vat : '',\r\n              company_name: response.data.name ? response.data.name : '',\r\n            });\r\n          } else {\r\n            setState({\r\n              ...state,\r\n              dateofincorporation: '',\r\n              address1: '',\r\n              city: '',\r\n              post_code: '',\r\n              vatnumber: '',\r\n              company_name: '',\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            dateofincorporation: '',\r\n            address1: '',\r\n            city: '',\r\n            post_code: '',\r\n            vatnumber: '',\r\n            company_name: '',\r\n          });\r\n        });\r\n    } else if (company && countryCode === 'GB') {\r\n      localforage.removeItem('dk_comp_owners');\r\n      Service.getData(countryCode, company)\r\n        .then((response) => {\r\n          if (!response.data.DATA.errors) {\r\n            let addr_1 =\r\n              response.data.DATA.registered_office_address.address_line_1 || '';\r\n            let addr_2 =\r\n              response.data.DATA.registered_office_address.address_line_2 || '';\r\n            let postcode =\r\n              response.data.DATA.registered_office_address.postal_code || '';\r\n            let city =\r\n              response.data.DATA.registered_office_address.locality || '';\r\n\r\n            setState({\r\n              ...state,\r\n\r\n              companynumber: response.data.DATA.company_number,\r\n              dateofincorporation: response.data.DATA.date_of_creation,\r\n              address1:\r\n                response.data.DATA.registered_office_address.address_line_1,\r\n\r\n              post_code:\r\n                response.data.DATA.registered_office_address.postal_code,\r\n              vatnumber: x.vat_number,\r\n\r\n              company_name: response.data.DATA.company_name,\r\n            });\r\n          } else {\r\n            setState({\r\n              ...state,\r\n              dateofincorporation: '',\r\n              address1: '',\r\n              address2: '',\r\n              post_code: '',\r\n              vatnumber: '',\r\n              company_name: '',\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            dateofincorporation: '',\r\n            address1: '',\r\n            address2: '',\r\n            post_code: '',\r\n            vatnumber: '',\r\n            company_name: '',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const selectCountry = (val) => {\r\n    console.log('country val', val);\r\n    setState({ ...state, country: val, countryError: '' });\r\n    countryCode = val;\r\n    getFormData();\r\n  };\r\n\r\n  const setValues = (e) => {\r\n    // let self = this;\r\n    localforage\r\n      .getItem('bus_data')\r\n      .then(function (value) {\r\n        countryCode = value.country;\r\n        setState({\r\n          ...state,\r\n          companynumber: value.companynumber,\r\n          country: value.country,\r\n          company_name: value.company_name,\r\n          dateofincorporation: value.dateofincorporation,\r\n          address1: value.address1,\r\n          address2: value.address2,\r\n          city: value.city,\r\n          post_code: value.post_code,\r\n          vatnumber: value.vatnumber,\r\n          dbalegalname: value.dbalegalname,\r\n          dbaaddress1: value.dbaaddress1,\r\n          dbaaddress2: value.dbaaddress2,\r\n          dbacity: value.dbacity,\r\n          dbapost_code: value.dbapost_code,\r\n          websitename: value.websitename,\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const [restrict, setrestrict] = useState();\r\n  useEffect(() => {\r\n    // setValues();\r\n    // const x = JSON.parse(localStorage.getItem('business_detail'));\r\n    const y = JSON.parse(localStorage.getItem('isLoggedIn'));\r\n    console.log('y is', y);\r\n    console.log('y is', restrict);\r\n    y == 0 ? setrestrict(true) : setrestrict(false);\r\n    // if (y == 0) {\r\n    //   setrestrict(true);\r\n    // } else if (y == 1) {\r\n    //   setrestrict(false);\r\n    // }\r\n    console.log('x is', x);\r\n    // if (x) {\r\n    //   setState({\r\n    //     ...state,\r\n    //     companynumber: x.company_number,\r\n    //     dateofincorporation: x.incorporation_date,\r\n    //     address1: x.address1,\r\n    //     city: x.city,\r\n    //     post_code: x.post_code,\r\n    //     vatnumber: x.vat_number,\r\n    //     dbalegalname: x.dba,\r\n    //     dbaaddress: x.dbaaddress,\r\n    //     dbaaddress1: x.dbaaddress1,\r\n    //     dbaaddress2: x.dbaaddress1,\r\n    //     dbacity: x.dbacity,\r\n    //     websitename: x.websitename,\r\n    //     country: x.country_Incorporation,\r\n    //     company_name: x.company_name,\r\n    //   });\r\n    // } else {\r\n    //   setState({\r\n    //     ...state,\r\n    //     companynumber: '',\r\n    //     dateofincorporation: '',\r\n    //     address1: '',\r\n    //     city: '',\r\n    //     post_code: '',\r\n    //     vatnumber: '',\r\n    //     dbalegalname: '',\r\n    //     dbaaddress: '',\r\n    //     dbaaddress1: '',\r\n    //     dbaaddress2: '',\r\n    //     dbacity: '',\r\n    //     websitename: '',\r\n    //     country: '',\r\n    //     company_name: '',\r\n    //   });\r\n    // }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('business_detail', JSON.stringify(state));\r\n    console.log('state in bd', state);\r\n  }, [state]);\r\n\r\n  return (\r\n    <>\r\n      {restrict ? (\r\n        <RestrictUser />\r\n      ) : (\r\n        <div className='content-box'>\r\n          <div className='container-fluid h-100'>\r\n            <div className='row justify-content-center align-items-center h-100'>\r\n              <div className='col-sm-12 py-4'>\r\n                <div className='text-center steping'>\r\n                  <span>Step 2 of 6</span>\r\n                </div>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                  <h4 className='pb-4 fs-2 text-center fw-bold'>\r\n                    Business Details\r\n                  </h4>\r\n                  <div className='row justify-content-center g-3'>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <CountryDropdown\r\n                          className='form-select form-control'\r\n                          value={state.country}\r\n                          valueType='short'\r\n                          onChange={(val) => selectCountry(val)}\r\n                        />\r\n                        <div className='form-text'>{error.countryError}</div>\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='countryofincorporation'>\r\n                          Country of Incorporation{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='companynumber'\r\n                          id='companynumber'\r\n                          onChange={handleInputChanged}\r\n                          onBlur={getCompanyData}\r\n                          placeholder='Company Name'\r\n                          autoComplete='off'\r\n                          value={state.companynumber}\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='companynumber'>\r\n                          Company Number\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {error.companynumberError}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='company_name'\r\n                          id='company_name'\r\n                          onChange={handleInputChanged}\r\n                          placeholder='Company Name'\r\n                          autoComplete='off'\r\n                          value={state.company_name}\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='company_name'>\r\n                          Company Name<strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {error.company_nameError}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='vatnumber'\r\n                          id='vatnumber'\r\n                          onChange={handleInputChanged}\r\n                          placeholder='VAT Number'\r\n                          autoComplete='off'\r\n                          value={state.vatnumber}\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='vatnumber'>\r\n                          VAT Number <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>{error.vatnumberError}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='dateofincorporation'\r\n                          id='dateofincorporation'\r\n                          onChange={handleInputChanged}\r\n                          placeholder='date'\r\n                          autoComplete='off'\r\n                          value={state.dateofincorporation}\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='dateofincorporation'>\r\n                          Date of Incorporation (MM/DD/YY)\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {error.dateofincorporationError}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating overflow-hidden'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='address1'\r\n                          id='address1'\r\n                          onChange={handleInputChanged}\r\n                          placeholder='Legal Address'\r\n                          autoComplete='off'\r\n                          value={state.address1}\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='address1'>\r\n                          Address Line 1{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>{error.address1Error}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating overflow-hidden'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='address2'\r\n                          id='address2'\r\n                          onChange={handleInputChanged}\r\n                          placeholder='Legal Address'\r\n                          value={state.address2}\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='address2'>Address Line 2</label>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating overflow-hidden'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='city'\r\n                          id='city'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          placeholder='Legal Address'\r\n                          value={state.city}\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='city'>\r\n                          City<strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>{error.cityError}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating overflow-hidden'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='post_code'\r\n                          autoComplete='off'\r\n                          id='post_code'\r\n                          onChange={handleInputChanged}\r\n                          placeholder='Legal Address'\r\n                          value={state.post_code}\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='post_code'>\r\n                          Post code <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>{error.post_codeError}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='dbalegalname'\r\n                          id='dbalegalname'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={\r\n                            state.dbalegalname == 'null'\r\n                              ? ' '\r\n                              : state.dbalegalname\r\n                          }\r\n                          placeholder='DBA (Doing Business As. If different from Legal Name)'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='dbalegalname'>\r\n                          DBA (Doing Business As. If different from Legal Name)\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='dbaaddress1'\r\n                          id='dbaaddress1'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={\r\n                            state.dbaaddress1 == 'null' ? '' : state.dbaaddress1\r\n                          }\r\n                          placeholder='DBA Address'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='dbaaddress1'>DBA Address Line 1</label>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='dbaaddress2'\r\n                          id='dbaaddress2'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={\r\n                            state.dbaaddress2 == 'null' ? '' : state.dbaaddress2\r\n                          }\r\n                          placeholder='DBA Address'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='dbaaddress2'>DBA Address Line 2</label>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='dbacity'\r\n                          id='dbacity'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={state.dbacity == 'null' ? '' : state.dbacity}\r\n                          placeholder='DBA City'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='dbacity'>DBA City</label>\r\n                        <div className='form-text'>{error.dbacityError}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          name='dbapost_code'\r\n                          id='dbapost_code'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={\r\n                            state.dbapost_code == 'null'\r\n                              ? ''\r\n                              : state.dbapost_code\r\n                          }\r\n                          placeholder='DBA Address'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='dbapost_code'>DBA Post code</label>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='url'\r\n                          className='form-control'\r\n                          name='websitename'\r\n                          id='websitename'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={\r\n                            state.websitename == 'null' ? '' : state.websitename\r\n                          }\r\n                          placeholder='Website https://'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='websitename'>Website</label>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-12 col-xl-5'></div>\r\n                    <div className='col-md-12 col-xl-5'>\r\n                      <input\r\n                        type='submit'\r\n                        name='submit'\r\n                        className='btn btn-primary w-100 btn-lg'\r\n                        value='Next Step'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BusinessDetails;\r\n\r\n//chrome.exe --disable-web-security --user-data-dir=\"c:/ChromeDevSession\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\CustomerDetails.js",["152","153","154","155","156","157"],"import React, { Component, useEffect } from 'react';\r\n\r\nimport Service from '../services/service';\r\nimport $ from 'jquery';\r\nimport localforage from 'localforage';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/bootstrap.css';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nvar md5 = require('md5');\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // create a ref to store the DOM element\r\n\r\n    this.state = {\r\n      companyemail: '',\r\n      phonenumber: '',\r\n      isEmailOTPSend: false,\r\n      isMobileOTPSend: false,\r\n      sendMobileOtp: '',\r\n      sendEmailOtp: '',\r\n      userEmailotp: '',\r\n      userMobileotp: '',\r\n      emailOTPVerified: false,\r\n      mobileOTPVerified: false,\r\n      phoneOtpText: 'Verify',\r\n      emailOtpText: 'Verify',\r\n      ip: '',\r\n      location: '',\r\n      complete: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleInputChanged = this.handleInputChanged.bind(this);\r\n    this.sendEmailOTP = this.sendEmailOTP.bind(this);\r\n    this.sendPhoneOTP = this.sendPhoneOTP.bind(this);\r\n    this.verifyEmailOTP = this.verifyEmailOTP.bind(this);\r\n    this.verifyMobileOTP = this.verifyMobileOTP.bind(this);\r\n\r\n    console.log('state is', this.state);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    const { history } = this.props;\r\n    var Email = this.state.companyemail;\r\n    localStorage.setItem('isLoggedIn', JSON.stringify(1));\r\n    localStorage.setItem('add_user', JSON.stringify(this.state));\r\n    console.log('state in final', this.state);\r\n    const email = this.state.companyemail;\r\n    const phn = this.state.phonenumber;\r\n    e.preventDefault();\r\n    if (this.state.companyemail === '') {\r\n      this.setState({ emailError: 'Please enter a valid email.' });\r\n      return;\r\n    }\r\n    if (this.state.phonenumber === '') {\r\n      this.setState({ phoneError: 'Please enter a mobile number.' });\r\n      return;\r\n    }\r\n    // var axios = require(\"axios\");\r\n    // const PostDetails = {\r\n    //   // ip: this.state.ip,\r\n    //   // location: this.state.location,\r\n    //   // email: this.state.companyemail,\r\n    //   // comp_phone_no: this.state.phonenumber,\r\n    // };\r\n\r\n    var axios = require('axios');\r\n\r\n    var data = {\r\n      status: 'incomplete',\r\n      email: `${this.state.companyemail}`,\r\n      comp_phone_no: `${this.state.phonenumber}`,\r\n      ip: `${this.state.ip}`,\r\n      location: `${this.state.location}`,\r\n      country_Incorporation: '',\r\n      company_number: '',\r\n      company_name: '',\r\n      incorporation_date: '',\r\n      address1: '',\r\n      address2: '',\r\n      city: '',\r\n      post_code: '',\r\n      vat_number: '',\r\n      dba: '',\r\n      dbaaddress1: '',\r\n      dbaaddress2: '',\r\n      dbacity: '',\r\n      dbapost_code: '',\r\n      website: '',\r\n      type: '',\r\n      offered_services: '',\r\n      annual_turnover: '',\r\n      card_sales: '',\r\n      avg_transaction: '',\r\n      max_amt_per_trans: '',\r\n      number_of_chargeback: '',\r\n      new_card_process: '',\r\n      previous_acquirer: '',\r\n      account_name: '',\r\n      bank_name: '',\r\n      reg_nr: '',\r\n      account_number: '',\r\n      iban_number: '',\r\n      swift_bic: '',\r\n      sort_code: '',\r\n      copy_company_registration: '',\r\n      proof_company_bank: '',\r\n      passport_share_holder: '',\r\n      address_proof_share_holder: '',\r\n      signature: '',\r\n      name: '',\r\n      declaration: '',\r\n    };\r\n\r\n    var config = {\r\n      method: 'post',\r\n      mode: 'no-cors',\r\n      url: 'http://hrm.zotto.io/api/add',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        Authorization:\r\n          'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log('response of add', response);\r\n\r\n        localStorage.setItem('kyc_id', JSON.stringify(response.data.kyc_id));\r\n        toast.success('Successfully Registered', {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n        });\r\n        // localStorage.setItem('isLoggedIn', JSON.stringify(1));\r\n\r\n        history.push(`/business_details`);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('response of add', error);\r\n\r\n        toast.error('Email or phone is already registered.', {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n        });\r\n        console.log('state in catch', email, phn);\r\n        // localStorage.setItem('isLoggedIn', JSON.stringify(1));\r\n        history.push(`/business_details`);\r\n      });\r\n\r\n    //get data\r\n  }\r\n\r\n  getData() {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        var axios = require('axios');\r\n        var getData = JSON.stringify({\r\n          email: `${this.state.companyemail}`,\r\n        });\r\n\r\n        console.log('json data', getData);\r\n\r\n        var config = {\r\n          method: 'post',\r\n          mode: 'no-cors',\r\n          url: 'http://hrm.zotto.io/api/get',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n          },\r\n\r\n          data: getData,\r\n        };\r\n\r\n        axios(config)\r\n          .then(function (response) {\r\n            console.log('response of get', response.data);\r\n            resolve(response.data.Kyc);\r\n            localStorage.setItem(\r\n              'previous_data',\r\n              JSON.stringify(response.data.Kyc)\r\n            );\r\n            localStorage.setItem(\r\n              'previous_data_shareholder',\r\n              JSON.stringify(response.data.Shareholders)\r\n            );\r\n          })\r\n          .catch(function (error) {\r\n            var prevdata = {\r\n              account_name: null,\r\n              account_number: null,\r\n              address1: null,\r\n              address2: null,\r\n              address_proof_share_holder: null,\r\n              annual_turnover: null,\r\n              avg_transaction: null,\r\n              bank_name: null,\r\n              card_sales: null,\r\n              city: null,\r\n              comp_phone_no: null,\r\n              company_id: null,\r\n              company_name: null,\r\n              company_number: null,\r\n              copy_company_registration: null,\r\n              country_Incorporation: null,\r\n              created_at: null,\r\n              dba: null,\r\n              dbaaddress1: null,\r\n              dbaaddress2: null,\r\n              dbacity: null,\r\n              dbapost_code: null,\r\n              declaration: null,\r\n              email: null,\r\n              iban_number: null,\r\n              id: null,\r\n              incorporation_date: null,\r\n              ip: null,\r\n              lead_status: null,\r\n              location: null,\r\n              max_amt_per_trans: null,\r\n              name: null,\r\n              new_card_process: null,\r\n              number_of_chargeback: null,\r\n              offered_services: null,\r\n              passport_share_holder: null,\r\n              post_code: null,\r\n              previous_acquirer: null,\r\n              proof_company_bank: null,\r\n              reg_nr: null,\r\n              signature: null,\r\n              sort_code: null,\r\n              status: null,\r\n              swift_bic: null,\r\n              type: null,\r\n              vat_number: null,\r\n              website: null,\r\n            };\r\n            localStorage.setItem('previous_data', JSON.stringify(prevdata));\r\n            resolve('error');\r\n          });\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  async sendEmailOTP(e) {\r\n    const result = await this.getData();\r\n    var axios = require('axios');\r\n\r\n    if (result == 'error') {\r\n      if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\r\n          this.state.companyemail\r\n        )\r\n      ) {\r\n        this.setState({ emailError: 'Please enter a valid email.' });\r\n        return;\r\n      } else {\r\n        this.setState({ emailError: '' });\r\n      }\r\n\r\n      var formData = new FormData();\r\n      formData.append('email', this.state.companyemail);\r\n\r\n      Service.emailOTP(formData)\r\n        .then((response) => {\r\n          console.log('response of otp', response);\r\n          if (response.status === 200) {\r\n            this.setState({\r\n              emailOtpText: 'Resend',\r\n              isEmailOTPSend: true,\r\n              sendEmailOtp: response.data.data,\r\n            });\r\n            toast.success('OTP has been sent.', {\r\n              position: 'top-right',\r\n              autoClose: 5000,\r\n            });\r\n          }\r\n          console.log('response of otp', this.state);\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ error: error.response });\r\n        });\r\n    } else {\r\n      if (result.status == 'complete') {\r\n        toast.success(\r\n          'Your kyc is already completed. Our executive will get in touch with you soon.',\r\n          {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n          }\r\n        );\r\n      } else {\r\n        // this.setState({\r\n        //   emailOtpText: 'Resend',\r\n        //   isEmailOTPSend: true,\r\n        //   sendEmailOtp: '',\r\n        // });\r\n        // toast.success('OTP has been sent.', {\r\n        //   position: 'top-right',\r\n        //   autoClose: 5000,\r\n        // });\r\n\r\n        if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\r\n            this.state.companyemail\r\n          )\r\n        ) {\r\n          this.setState({ emailError: 'Please enter a valid email.' });\r\n          return;\r\n        } else {\r\n          this.setState({ emailError: '' });\r\n        }\r\n\r\n        var formData = new FormData();\r\n        formData.append('email', this.state.companyemail);\r\n\r\n        Service.emailOTP(formData)\r\n          .then((response) => {\r\n            console.log('response of otp', response);\r\n            if (response.status === 200) {\r\n              this.setState({\r\n                emailOtpText: 'Resend',\r\n                isEmailOTPSend: true,\r\n                sendEmailOtp: response.data.data,\r\n              });\r\n              toast.success('OTP has been sent.', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n              });\r\n            }\r\n            console.log('response of otp', this.state);\r\n          })\r\n          .catch((error) => {\r\n            this.setState({ error: error.response });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  sendPhoneOTP(e) {\r\n    // this.setState({\r\n    //   phoneOtpText: 'Resend',\r\n    //   isMobileOTPSend: true,\r\n    //   sendMobileOtp: '',\r\n    // });\r\n\r\n    if (\r\n      !/^(\\+{0,})(\\d{0,})([(]{1}\\d{1,3}[)]{0,}){0,}(\\s?\\d+|\\+\\d{2,3}\\s{1}\\d+|\\d+){1}[\\s|-]?\\d+([\\s|-]?\\d+){1,2}(\\s){0,}$/gm.test(\r\n        this.state.phonenumber\r\n      ) ||\r\n      this.state.phonenumber.length < 9\r\n    ) {\r\n      this.setState({ mobileError: 'Please enter a valid phone number.' });\r\n      return;\r\n    } else {\r\n      this.setState({ mobileError: '' });\r\n    }\r\n    var formData = new FormData();\r\n    formData.append('mobile', '+' + this.state.phonenumber);\r\n\r\n    Service.phoneOTP(formData)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({\r\n            phoneOtpText: 'Resend',\r\n            isMobileOTPSend: true,\r\n            sendMobileOtp: response.data.data,\r\n          });\r\n          toast.success('OTP has been sent.', {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: error.response });\r\n      });\r\n  }\r\n\r\n  verifyEmailOTP(e) {\r\n    // this.setState({\r\n    //   emailOTPVerified: true,\r\n    //   emailOtpText: 'Confirmed',\r\n    //   isEmailOTPSend: false,\r\n    // });\r\n    localStorage.setItem('Emailverified', true);\r\n    if (this.state.sendEmailOtp === md5(this.state.userEmailotp)) {\r\n      this.setState({\r\n        emailOTPVerified: true,\r\n        emailOtpText: 'Confirmed',\r\n        isEmailOTPSend: false,\r\n      });\r\n      localStorage.setItem('Emailverified', true);\r\n      $('.btn-sendotp.email').attr('disabled', true);\r\n      toast.success('Email has been verified.', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n      });\r\n    } else {\r\n      toast.error('Please enter correct OTP to verify email.', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n      });\r\n    }\r\n  }\r\n\r\n  verifyMobileOTP(e) {\r\n    // this.setState({\r\n    //   mobileOTPVerified: true,\r\n    //   phoneOtpText: 'Confirmed',\r\n    //   isMobileOTPSend: false,\r\n    // });\r\n    localStorage.setItem('Phoneverified', true);\r\n    if (this.state.sendMobileOtp === md5(this.state.userMobileotp)) {\r\n      this.setState({\r\n        mobileOTPVerified: true,\r\n        phoneOtpText: 'Confirmed',\r\n        isMobileOTPSend: false,\r\n      });\r\n      localStorage.setItem('Phoneverified', true);\r\n      $('.btn-sendotp.phone').attr('disabled', true);\r\n      toast.success('Phone number has been verified.', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n      });\r\n      $('.btn-sendotp.phone').show();\r\n    } else {\r\n      toast.error('Please enter correct OTP to verify phone number.', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleInputChanged(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    if (event.target.name === 'companyemail') {\r\n      this.setState({\r\n        isEmailOTPSend: false,\r\n        emailOTPVerified: false,\r\n        emailOtpText: 'Verify',\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    localStorage.clear();\r\n    localforage.clear();\r\n    localStorage.setItem('isLoggedIn', JSON.stringify(0)); //0\r\n    Service.getIpData()\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({\r\n            ip: response.data.ip,\r\n            location:\r\n              response.data.city +\r\n              ',' +\r\n              response.data.region +\r\n              ',' +\r\n              response.data.country_name,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='content-box'>\r\n        <div className='container-fluid h-100'>\r\n          <div className='row justify-content-center align-items-center h-100'>\r\n            <div className='col-sm-12 col-md-8 col-lg-7 col-xxl-5 py-4'>\r\n              <div className='text-center steping'>\r\n                <span>Step 1 of 6</span>\r\n              </div>\r\n              <h4 className='pb-4 fs-2 text-center fw-bold'>\r\n                Customer Verification\r\n              </h4>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className='form-floating mb-3'>\r\n                  <input\r\n                    type='email'\r\n                    className='form-control form-otp'\r\n                    name='companyemail'\r\n                    id='companyemail'\r\n                    placeholder='name@example.com'\r\n                    onChange={this.handleInputChanged}\r\n                    value={this.state.companyemail}\r\n                    readOnly={this.state.emailOTPVerified ? true : false}\r\n                  />\r\n                  <label htmlFor='companyemail'>\r\n                    Company Email <strong className='text-danger'>*</strong>\r\n                  </label>\r\n                  <span className='bar'></span>\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-link px-1 text-decoration-none btn-sendotp email'\r\n                    onClick={this.sendEmailOTP}\r\n                    disabled={this.state.emailOTPVerified ? true : false}\r\n                  >\r\n                    {this.state.emailOtpText}\r\n                  </button>\r\n                  <div className='form-text'>{this.state.emailError}</div>\r\n                </div>\r\n                {this.state.emailOTPVerified ? (\r\n                  <div className='form-floating form-floatingnumber form-floating-confirm mb-3'>\r\n                    <PhoneInput\r\n                      specialLabel='Phone Number'\r\n                      inputClass='form-control form-otp'\r\n                      inputProps={{\r\n                        name: 'phonenumber',\r\n                        readOnly: this.state.mobileOTPVerified ? true : false,\r\n                        autoComplete: 'off',\r\n                      }}\r\n                      enableSearch='true'\r\n                      country={'gb'}\r\n                      placeholder='Phone Number'\r\n                      value={this.state.phonenumber}\r\n                      onChange={(phonenumber) =>\r\n                        this.setState({\r\n                          phonenumber,\r\n                          isMobileOTPSend: false,\r\n                          mobileOTPVerified: false,\r\n                          phoneOtpText: 'Verify',\r\n                        })\r\n                      }\r\n                    />\r\n                    <span className='bar'></span>\r\n                    <button\r\n                      type='button'\r\n                      className='btn btn-link px-1 text-decoration-none btn-sendotp phone'\r\n                      onClick={this.sendPhoneOTP}\r\n                      disabled={this.state.mobileOTPVerified ? true : false}\r\n                    >\r\n                      {this.state.phoneOtpText}{' '}\r\n                    </button>\r\n                    <div className='form-text'>{this.state.mobileError}</div>\r\n                  </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {this.state.isEmailOTPSend ? (\r\n                  <div className='form-floating mb-3'>\r\n                    <input\r\n                      type='text'\r\n                      className='form-control form-otp'\r\n                      name='userEmailotp'\r\n                      placeholder='Enter Email OTP'\r\n                      onChange={this.handleInputChanged}\r\n                    />\r\n                    <label htmlFor='otpfield'>Enter Email OTP</label>\r\n                    <span className='bar'></span>\r\n                    <button\r\n                      type='button'\r\n                      className='btn btn-link px-1 text-decoration-none btn-sendotp'\r\n                      onClick={this.verifyEmailOTP}\r\n                    >\r\n                      Confirm\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {this.state.isMobileOTPSend ? (\r\n                  <div className='form-floating mb-3'>\r\n                    <input\r\n                      type='text'\r\n                      className='form-control form-otp'\r\n                      name='userMobileotp'\r\n                      placeholder='Enter OTP'\r\n                      onChange={this.handleInputChanged}\r\n                    />\r\n                    <label htmlFor='otpfield'>Enter Mobile OTP</label>\r\n                    <span className='bar'></span>\r\n                    <button\r\n                      type='button'\r\n                      className='btn btn-link px-1 text-decoration-none btn-sendotp'\r\n                      onClick={this.verifyMobileOTP}\r\n                    >\r\n                      Confirm\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {this.state.emailOTPVerified && this.state.mobileOTPVerified ? (\r\n                  <button\r\n                    type='submit'\r\n                    className='btn btn-primary w-100 btn-lg'\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                ) : (\r\n                  <button className='btn btn-primary w-100 btn-lg' disabled>\r\n                    Submit\r\n                  </button>\r\n                )}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CustomerDetails;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\BusinessActivities.js",["158","159","160","161","162","163","164","165","166","167","168","169"],"import React, { Component, useEffect, useState } from 'react';\r\nimport Service from '../services/service';\r\nimport localforage from 'localforage';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RestrictUser from './RestrictUser';\r\ntoast.configure();\r\n\r\nconst BusinessActivities = () => {\r\n  // create a ref to store the DOM element\r\n  const history = useHistory();\r\n  const x = JSON.parse(localStorage.getItem('previous_data'));\r\n\r\n  const [state, setState] = useState({\r\n    type: '',\r\n    offered_services: '',\r\n    annual_turnover: '',\r\n    card_sales: '',\r\n    avg_transaction: '',\r\n    max_amt_per_trans: '',\r\n    number_of_chargeback: '',\r\n    new_card_process: '',\r\n  });\r\n\r\n  // handleSubmit = this.handleSubmit.bind(this);\r\n  // this.handleInputChanged = this.handleInputChanged.bind(this);\r\n\r\n  useEffect(() => {\r\n    console.log('state in ba', state);\r\n  }, [state]);\r\n\r\n  const handleSubmit = (e) => {\r\n    const y = JSON.parse(localStorage.getItem('kyc_id'));\r\n    e.preventDefault();\r\n    var validForm = true;\r\n    if (!state.type) {\r\n      setState({ ...state, typeError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.offered_services) {\r\n      setState({ ...state, offered_servicesError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.annual_turnover) {\r\n      setState({ ...state, annual_turnoverError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.card_sales) {\r\n      setState({ ...state, card_salesError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.avg_transaction) {\r\n      setState({ ...state, avg_transactionError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.max_amt_per_trans) {\r\n      setState({ ...state, max_amt_per_transError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    // if (!state.new_card_process) {\r\n    //     setState({...state, new_card_processError: 'This field is required.' });\r\n    //     validForm = false\r\n    // }\r\n    if (state.type !== 'Banking') {\r\n      if (!state.new_card_process) {\r\n        setState({\r\n          ...state,\r\n          new_card_processError: 'This field is required.',\r\n        });\r\n        validForm = false;\r\n      }\r\n    }\r\n\r\n    console.log('final business state', state);\r\n\r\n    const PostDetails = {\r\n      id: localStorage.getItem('insert_id'),\r\n      type: state.type,\r\n      offered_services: state.offered_services,\r\n      annual_turnover: state.annual_turnover,\r\n      card_sales: state.card_sales,\r\n      avg_transaction: state.avg_transaction,\r\n      max_amt_per_trans: state.max_amt_per_trans,\r\n      number_of_chargeback: state.number_of_chargeback\r\n        ? state.number_of_chargeback\r\n        : 0,\r\n      new_card_process: state.new_card_process,\r\n      previous_acquirer: state.previous_acquirer,\r\n    };\r\n\r\n    if (validForm) {\r\n      var axios = require('axios');\r\n      const no_of_charge = state.number_of_chargeback\r\n        ? state.number_of_chargeback\r\n        : 0;\r\n      var data = {\r\n        id: `${x.id}`,\r\n        type: `${state.type}`,\r\n        offered_services: `${state.offered_services}`,\r\n\r\n        annual_turnover: `${state.annual_turnover}`,\r\n        card_sales: `${state.card_sales}`,\r\n        avg_transaction: `${state.avg_transaction}`,\r\n        max_amt_per_trans: `${state.max_amt_per_trans}`,\r\n        number_of_chargeback: `${no_of_charge}`,\r\n        new_card_process: `${state.new_card_process}`,\r\n        previous_acquirer: `${state.previous_acquirer}`,\r\n        status: 'incomplete',\r\n      };\r\n\r\n      var config = {\r\n        method: 'put',\r\n        mode: 'no-cors',\r\n        url: 'http://hrm.zotto.io/api/businessactivities',\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n          Authorization:\r\n            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      axios(config)\r\n        .then(function (response) {\r\n          console.log('response of update', response);\r\n          toast.success('Records added successfully', {\r\n            position: 'top-right',\r\n            autoClose: 1000,\r\n          });\r\n\r\n          history.push(`/bank_details`);\r\n        })\r\n        .catch(function (error) {\r\n          setState({ ...state, error: error });\r\n          toast.error('Something went wrong !!', {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n          });\r\n        });\r\n\r\n      // Service.update(PostDetails).then(response => {\r\n      //     if(response.data.status === 200){\r\n      //         this.props.history.push('/bank_details');\r\n      //         localStorage.setItem('bus_type', this.state.type);\r\n      //         localforage.setItem('bus_act_data', this.state);\r\n      //     }\r\n      //     if (response.data.status === 500) {\r\n      //         let messageObj = response.data.message;\r\n      //         messageObj.map((message) => toast.error(message))\r\n      //     }\r\n      // }).catch(error => {\r\n      //     this.setState({error: error.response});\r\n      //     toast.error('Something went wrong !!', {\r\n      //         position: \"top-right\", autoClose: 5000,\r\n      //     })\r\n      // });\r\n    }\r\n\r\n    var axios = require('axios');\r\n    const email = JSON.parse(localStorage.getItem('add_user'));\r\n\r\n    var data = {\r\n      email: `${email.companyemail}`,\r\n    };\r\n\r\n    var config = {\r\n      method: 'post',\r\n      mode: 'no-cors',\r\n      url: 'http://hrm.zotto.io/api/get',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        Authorization:\r\n          'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log('response of get', response.data);\r\n\r\n        localStorage.setItem(\r\n          'previous_data',\r\n          JSON.stringify(response.data.Kyc)\r\n        );\r\n        localStorage.setItem(\r\n          'previous_data_shareholder',\r\n          JSON.stringify(response.data.Shareholders)\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log('error of get', error);\r\n      });\r\n  };\r\n\r\n  const [dropdown, setdropdown] = useState();\r\n\r\n  const handleTypeOfBusiness = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n\r\n      typeError: '',\r\n      offered_servicesError: '',\r\n      annual_turnoverError: '',\r\n      card_salesError: '',\r\n      avg_transactionError: '',\r\n      max_amt_per_transError: '',\r\n      new_card_processError: '',\r\n    });\r\n  };\r\n\r\n  const handleInputChanged = (event) => {\r\n    console.log('name is', event.target.value);\r\n    //setdropdown(event.target.value);\r\n    var x = event.target.value;\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n\r\n      typeError: '',\r\n      offered_servicesError: '',\r\n      annual_turnoverError: '',\r\n      card_salesError: '',\r\n      avg_transactionError: '',\r\n      max_amt_per_transError: '',\r\n      new_card_processError: '',\r\n    });\r\n\r\n    if (event.target.name === 'type' && event.target.value !== 'Hospitality') {\r\n      setState({ ...state, new_card_process: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('business state', dropdown);\r\n  }, [dropdown]);\r\n\r\n  const setValues = (e) => {\r\n    // let self = this;\r\n    localforage\r\n      .getItem('bus_act_data')\r\n      .then(function (value) {\r\n        console.log('value is', value);\r\n        setState({\r\n          ...state,\r\n          type: value.type,\r\n          offered_services: value.offered_services,\r\n          annual_turnover: value.annual_turnover,\r\n          card_sales: value.card_sales,\r\n          avg_transaction: value.avg_transaction,\r\n          max_amt_per_trans: value.max_amt_per_trans,\r\n          number_of_chargeback: value.number_of_chargeback,\r\n          new_card_process: value.new_card_process,\r\n          previous_acquirer: value.previous_acquirer,\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const [restrict, setrestrict] = useState();\r\n  useEffect(() => {\r\n    setValues();\r\n    // const x = JSON.parse(localStorage.getItem('business_activities'));\r\n    const y = JSON.parse(localStorage.getItem('isLoggedIn'));\r\n    console.log('y is', y);\r\n    console.log('y is', restrict);\r\n\r\n    if (y == 0) {\r\n      setrestrict(true);\r\n    } else if (y == 1) {\r\n      setrestrict(false);\r\n    }\r\n    console.log('x is', x);\r\n    if (x) {\r\n      setState({\r\n        ...state,\r\n        type: x.type,\r\n        offered_services: x.offered_services,\r\n        annual_turnover: x.annual_turnover,\r\n        card_sales: x.card_sales,\r\n        avg_transaction: x.avg_transaction,\r\n        max_amt_per_trans: x.max_amt_per_trans,\r\n        number_of_chargeback: x.number_of_chargeback,\r\n        new_card_process: x.new_card_process,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('business_activities', JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return (\r\n    <>\r\n      {restrict ? (\r\n        <RestrictUser />\r\n      ) : (\r\n        <div className='content-box'>\r\n          <div className='container-fluid h-100'>\r\n            <div className='row justify-content-center align-items-center h-100'>\r\n              <div className='col-sm-12 py-4'>\r\n                <div className='text-center steping'>\r\n                  <span>Step 3 of 6</span>\r\n                </div>\r\n                <div\r\n                  onClick={() => history.push('/business_details')}\r\n                  className='text-center steping'\r\n                  style={{ marginLeft: '80%', cursor: 'pointer' }}\r\n                >\r\n                  <span>Back</span>\r\n                </div>\r\n                <form onSubmit={handleSubmit}>\r\n                  <h4 className='pb-4 fs-2 text-center fw-bold'>\r\n                    Business Activities\r\n                  </h4>\r\n                  <div className='row justify-content-center g-3'>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <select\r\n                          defaultValue={'DEFAULT'}\r\n                          className='form-select form-control'\r\n                          name='type'\r\n                          autoComplete='off'\r\n                          value={state.type}\r\n                          id='type'\r\n                          //onChange={handleInputChanged}\r\n                          onChange={handleTypeOfBusiness}\r\n                          aria-label='Floating label select example'\r\n                        >\r\n                          <option value=''>Select Type</option>\r\n                          <option value='Hospitality'>Hospitality</option>\r\n                          <option value='Retail' name='retail'>\r\n                            Retail\r\n                          </option>\r\n                          <option value='E-commerce'>E-commerce</option>\r\n                          <option value='Banking'>Banking</option>\r\n                        </select>\r\n                        <span className='highlight'></span>\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='type'>\r\n                          Type of Business{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>{state.typeError}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          className='form-control'\r\n                          placeholder='Leave a comment here'\r\n                          autoComplete='off'\r\n                          name='offered_services'\r\n                          id='offered_services'\r\n                          value={state.offered_services}\r\n                          onChange={handleInputChanged}\r\n                        />\r\n                        <span className='highlight'></span>\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='offered_services'>\r\n                          Products or Services offered{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {state.offered_servicesError}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='number'\r\n                          className='form-control'\r\n                          name='annual_turnover'\r\n                          autoComplete='off'\r\n                          id='annual_turnover'\r\n                          onChange={handleInputChanged}\r\n                          value={state.annual_turnover}\r\n                          placeholder='Annual Turnover'\r\n                        />\r\n                        <span className='highlight'></span>\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='annual_turnover'>\r\n                          Annual Turnover{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {state.annual_turnoverError}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='number'\r\n                          className='form-control'\r\n                          id='card_sales'\r\n                          name='card_sales'\r\n                          autoComplete='off'\r\n                          value={state.card_sales}\r\n                          placeholder='(Anticipated) Card Sales p.a.'\r\n                          onChange={handleInputChanged}\r\n                        />\r\n                        <span className='highlight'></span>\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='card_sales'>\r\n                          (Anticipated) Card Sales p.a.{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>{state.card_salesError}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='number'\r\n                          className='form-control'\r\n                          id='avg_transaction'\r\n                          name='avg_transaction'\r\n                          autoComplete='off'\r\n                          placeholder='Phone Number'\r\n                          value={state.avg_transaction}\r\n                          onChange={handleInputChanged}\r\n                        />\r\n                        <span className='highlight'></span>\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='avg_transaction'>\r\n                          Average Transaction Value{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {state.avg_transactionError}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='number'\r\n                          className='form-control'\r\n                          id='max_amt_per_trans'\r\n                          autoComplete='off'\r\n                          name='max_amt_per_trans'\r\n                          onChange={handleInputChanged}\r\n                          value={state.max_amt_per_trans}\r\n                          placeholder='Phone Number'\r\n                        />\r\n                        <span className='highlight'></span>\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='max_amt_per_trans'>\r\n                          Maximum amount per transaction{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {state.max_amt_per_transError}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {state.type === 'E-commerce' ? (\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <div className='form-floating'>\r\n                          <input\r\n                            type='number'\r\n                            className='form-control'\r\n                            id='number_of_chargeback'\r\n                            autoComplete='off'\r\n                            name='number_of_chargeback'\r\n                            value={state.number_of_chargeback}\r\n                            onChange={handleInputChanged}\r\n                            placeholder='No. of chargebacks in last one year'\r\n                          />\r\n                          <span className='highlight'></span>\r\n                          <span className='bar'></span>\r\n                          <label htmlFor='number_of_chargeback'>\r\n                            No. of chargebacks in last one year{' '}\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {state.type !== 'Banking' ? (\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <div className='mb-3'>\r\n                          <label\r\n                            htmlFor='areyuo'\r\n                            className='form-label label-text d-block'\r\n                          >\r\n                            Are you new to Card processing?{' '}\r\n                            <strong className='text-danger'>*</strong>\r\n                          </label>\r\n                          <div className='form-check form-check-inline'>\r\n                            <input\r\n                              className='form-check-input'\r\n                              type='radio'\r\n                              id='inlineRadio1'\r\n                              name='new_card_process'\r\n                              onChange={handleInputChanged}\r\n                              checked={\r\n                                state.new_card_process === 'Yes' ? true : false\r\n                              }\r\n                              value='Yes'\r\n                            />\r\n                            <label\r\n                              className='form-check-label'\r\n                              htmlFor='inlineRadio1'\r\n                            >\r\n                              Yes\r\n                            </label>\r\n                          </div>\r\n                          <div className='form-check form-check-inline'>\r\n                            <input\r\n                              className='form-check-input'\r\n                              type='radio'\r\n                              id='inlineRadio2'\r\n                              name='new_card_process'\r\n                              onChange={handleInputChanged}\r\n                              value='No'\r\n                              checked={\r\n                                state.new_card_process === 'No' ? true : false\r\n                              }\r\n                            />\r\n                            <label\r\n                              className='form-check-label'\r\n                              htmlFor='inlineRadio2'\r\n                            >\r\n                              No\r\n                            </label>\r\n                          </div>\r\n                          <div className='form-text'>\r\n                            {state.new_card_processError}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {state.new_card_process === 'No' ? (\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <div className='form-floating'>\r\n                          <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='previous_acquirer'\r\n                            name='previous_acquirer'\r\n                            onChange={handleInputChanged}\r\n                            value={state.previous_acquirer}\r\n                            placeholder='Who was your previous acquirer/service provider'\r\n                          />\r\n                          <span className='highlight'></span>\r\n                          <span className='bar'></span>\r\n                          <label htmlFor='previous_acquirer'>\r\n                            Who was your previous acquirer/service provider{' '}\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    <div className='col-md-6 col-xl-5 mt-0'></div>\r\n                    <div className='w-100'></div>\r\n                    <div className='col-md-12 col-xl-5 mt-0'>\r\n                      <input\r\n                        type='submit'\r\n                        name='submit'\r\n                        className='btn btn-primary w-100 btn-lg show-opt'\r\n                        value='Next Step'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default BusinessActivities;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\BankDetails.js",["170","171","172","173","174","175","176","177","178","179","180","181","182"],"import React, { Component, useEffect, useState } from 'react';\r\nimport Service from '../services/service';\r\nimport localforage from 'localforage';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from 'react-router';\r\nimport RestrictUser from './RestrictUser';\r\ntoast.configure();\r\n\r\nconst BankDetails = () => {\r\n  // create a ref to store the DOM element\r\n\r\n  const x = JSON.parse(localStorage.getItem('previous_data'));\r\n\r\n  const history = useHistory();\r\n\r\n  const [state, setState] = useState({\r\n    account_name: '',\r\n    bank_name: '',\r\n    reg_nr: '',\r\n    account_number: '',\r\n    sort_code: '',\r\n    iban_number: '',\r\n    swift_bic: '',\r\n  });\r\n\r\n  // handleSubmit = this.handleSubmit.bind(this);\r\n  // this.handleInputChanged = this.handleInputChanged.bind(this);\r\n\r\n  const handleSubmit = (e) => {\r\n    const y = JSON.parse(localStorage.getItem('kyc_id'));\r\n    e.preventDefault();\r\n    var validForm = true;\r\n    if (!state.account_name) {\r\n      setState({ ...state, account_nameError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (/\\d/.test(state.account_name)) {\r\n      setState({ ...state, account_nameError: 'Please enter a valid value.' });\r\n      validForm = false;\r\n    }\r\n    if (!state.bank_name) {\r\n      setState({ ...state, bank_nameError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (/\\d/.test(state.bank_name)) {\r\n      setState({ ...state, bank_nameError: 'Please enter a valid value.' });\r\n      validForm = false;\r\n    }\r\n    if (localStorage.getItem('countryOfIncorporation') === 'DK') {\r\n      if (!state.reg_nr) {\r\n        setState({ ...state, reg_nrError: 'This field is required.' });\r\n        validForm = false;\r\n      }\r\n    }\r\n    if (localStorage.getItem('countryOfIncorporation') != 'DK') {\r\n      if (!state.sort_code) {\r\n        setState({ ...state, sort_codeError: 'This field is required.' });\r\n        validForm = false;\r\n      }\r\n    }\r\n    if (!state.account_number || isNaN(state.account_number)) {\r\n      setState({\r\n        ...state,\r\n        account_numberError: 'Please enter a valid value.',\r\n      });\r\n      validForm = false;\r\n    }\r\n    const PostDetails = {\r\n      id: localStorage.getItem('insert_id'),\r\n      account_name: state.account_name,\r\n      bank_name: state.bank_name,\r\n      reg_nr: state.reg_nr,\r\n      account_number: state.account_number,\r\n      sort_code: state.sort_code,\r\n      iban_number: state.iban_number,\r\n      swift_bic: state.swift_bic,\r\n    };\r\n\r\n    if (validForm) {\r\n      var axios = require('axios');\r\n      const no_of_charge = state.number_of_chargeback\r\n        ? state.number_of_chargeback\r\n        : 0;\r\n      var data = {\r\n        id: `${x.id}`,\r\n        account_name: `${state.account_name}`,\r\n        bank_name: `${state.bank_name}`,\r\n        reg_nr: `${state.reg_nr}`,\r\n        account_number: `${state.account_number}`,\r\n        sort_code: `${state.sort_code}`,\r\n        iban_number: `${state.iban_number}`,\r\n        swift_bic: `${state.swift_bic}`,\r\n        status: 'incomplete',\r\n      };\r\n\r\n      var config = {\r\n        method: 'put',\r\n        url: 'http://hrm.zotto.io/api/bankdetails',\r\n        mode: 'no-cors',\r\n        headers: {\r\n          Authorization:\r\n            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      axios(config)\r\n        .then(function (response) {\r\n          console.log('response of update', response);\r\n          toast.success('Records added successfully', {\r\n            position: 'top-right',\r\n            autoClose: 1000,\r\n          });\r\n\r\n          history.push(`/ownership_details`);\r\n        })\r\n        .catch(function (error) {\r\n          setState({ ...state, error: error });\r\n          toast.error('Something went wrong !!', {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n          });\r\n        });\r\n\r\n      // Service.update(PostDetails).then(response => {\r\n      //     if(response.data.status === 200){\r\n      //         localforage.setItem('bank_data', state);\r\n      //         props.history.push('/ownership_details');\r\n      //     }\r\n      //     if (response.data.status === 500) {\r\n      //         let messageObj = response.data.message;\r\n      //         messageObj.map((message) => toast.error(message))\r\n      //     }\r\n      // }).catch(error => {\r\n      //     setState({error: error.response});\r\n      //     toast.error('Something went wrong !!', {\r\n      //         position: \"top-right\", autoClose: 5000,\r\n      //     })\r\n      // });\r\n    }\r\n\r\n    var axios = require('axios');\r\n    const email = JSON.parse(localStorage.getItem('add_user'));\r\n\r\n    var data = {\r\n      email: `${email.companyemail}`,\r\n    };\r\n\r\n    var config = {\r\n      method: 'post',\r\n      url: 'http://hrm.zotto.io/api/get',\r\n      mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        Authorization:\r\n          'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log('response of get', response.data);\r\n\r\n        localStorage.setItem(\r\n          'previous_data',\r\n          JSON.stringify(response.data.Kyc)\r\n        );\r\n        localStorage.setItem(\r\n          'previous_data_shareholder',\r\n          JSON.stringify(response.data.Shareholders)\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log('error of get', error);\r\n      });\r\n  };\r\n\r\n  const verifyIBAN = (event) => {\r\n    var iban_no = event.target.value;\r\n    if (iban_no === '') {\r\n      return false;\r\n    }\r\n    Service.validateIBAN(iban_no).then((responce) => {\r\n      if (responce.status === 200) {\r\n        var element = document.getElementById('iban_number');\r\n        element.classList.remove('is-valid');\r\n        element.classList.remove('is-invalid');\r\n        if (responce.data.valid) {\r\n          element.classList.add('is-valid');\r\n        } else {\r\n          element.classList.add('is-invalid');\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleInputChanged = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n      account_nameError: '',\r\n      bank_nameError: '',\r\n      reg_nrError: '',\r\n      account_numberError: '',\r\n      sort_codeError: '',\r\n    });\r\n  };\r\n\r\n  const setValues = (e) => {\r\n    // let self = this;\r\n    localforage\r\n      .getItem('bank_data')\r\n      .then(function (value) {\r\n        console.log(value);\r\n        setState({\r\n          ...state,\r\n          account_name: value.account_name,\r\n          bank_name: value.bank_name,\r\n          reg_nr: value.reg_nr,\r\n          account_number: value.account_number,\r\n          sort_code: value.sort_code,\r\n          iban_number: value.iban_number,\r\n          swift_bic: value.swift_bic,\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const [restrict, setrestrict] = useState();\r\n  useEffect(() => {\r\n    setValues();\r\n    // const x = JSON.parse(localStorage.getItem('bank_details'));\r\n    console.log('x is', x);\r\n    const y = JSON.parse(localStorage.getItem('isLoggedIn'));\r\n    console.log('y is', y);\r\n    console.log('y is', restrict);\r\n\r\n    if (y == 0) {\r\n      setrestrict(true);\r\n    } else if (y == 1) {\r\n      setrestrict(false);\r\n    }\r\n    if (x) {\r\n      setState({\r\n        ...state,\r\n        account_name: x.account_name,\r\n        bank_name: x.bank_name,\r\n        reg_nr: x.reg_nr,\r\n        account_number: x.account_number,\r\n        sort_code: x.sort_code,\r\n        iban_number: x.iban_number,\r\n        swift_bic: x.swift_bic,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('bank_details', JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return (\r\n    <>\r\n      {restrict ? (\r\n        <RestrictUser />\r\n      ) : (\r\n        <div className='content-box'>\r\n          <div className='container-fluid h-100'>\r\n            <div\r\n              className='row justify-content-center align-items-center'\r\n              style={{ minHeight: '100%' }}\r\n            >\r\n              <div className='col-sm-12 py-4'>\r\n                <div className='text-center steping'>\r\n                  <span>Step 4 of 6</span>\r\n                </div>\r\n                <div\r\n                  onClick={() => history.push('/business_activities')}\r\n                  className='text-center steping'\r\n                  style={{ marginLeft: '80%', cursor: 'pointer' }}\r\n                >\r\n                  <span>Back</span>\r\n                </div>\r\n                <form onSubmit={handleSubmit}>\r\n                  <h4 className='pb-4 fs-2 text-center fw-bold'>\r\n                    Bank Details\r\n                  </h4>\r\n                  <div className='row justify-content-center g-3'>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          id='account_name'\r\n                          name='account_name'\r\n                          autoComplete='off'\r\n                          value={state.account_name}\r\n                          onChange={handleInputChanged}\r\n                          placeholder='Account Name'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='account_name'>\r\n                          Account Name<strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {state.account_nameError}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          id='bank_name'\r\n                          name='bank_name'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={state.bank_name}\r\n                          placeholder='Bank Name'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='bank_name'>\r\n                          Bank Name<strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>{state.bank_nameError}</div>\r\n                      </div>\r\n                    </div>\r\n                    {localStorage.getItem('countryOfIncorporation') === 'DK' ? (\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <div className='form-floating'>\r\n                          <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='reg_nr'\r\n                            name='reg_nr'\r\n                            autoComplete='off'\r\n                            value={state.reg_nr}\r\n                            onChange={handleInputChanged}\r\n                            placeholder='Registration Nr'\r\n                          />\r\n                          <span className='bar'></span>\r\n                          <label htmlFor='reg_nr'>\r\n                            Reg. Nr. <strong className='text-danger'>*</strong>\r\n                          </label>\r\n                          <div className='form-text'>{state.reg_nrError}</div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <div className='form-floating'>\r\n                          <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            id='sort_code'\r\n                            autoComplete='off'\r\n                            name='sort_code'\r\n                            value={state.sort_code}\r\n                            onChange={handleInputChanged}\r\n                            placeholder='Sort Code'\r\n                          />\r\n                          <span className='bar'></span>\r\n                          <label htmlFor='sort_code'>\r\n                            Sort Code<strong className='text-danger'>*</strong>\r\n                          </label>\r\n                          <div className='form-text'>\r\n                            {state.sort_codeError}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='number'\r\n                          className='form-control'\r\n                          id='account_number'\r\n                          name='account_number'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={state.account_number}\r\n                          placeholder='Account Number'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='account_number'>\r\n                          Account Number\r\n                          <strong className='text-danger'>*</strong>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {state.account_numberError}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          id='iban_number'\r\n                          name='iban_number'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={\r\n                            state.iban_number == 'null' ? '' : state.iban_number\r\n                          }\r\n                          onBlur={verifyIBAN}\r\n                          placeholder='IBAN Number'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='iban_number'>IBAN Number</label>\r\n                        <div id='iban_check'></div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-6 col-xl-5'>\r\n                      <div className='form-floating'>\r\n                        <input\r\n                          type='text'\r\n                          className='form-control'\r\n                          id='swift_bic'\r\n                          name='swift_bic'\r\n                          autoComplete='off'\r\n                          onChange={handleInputChanged}\r\n                          value={\r\n                            state.swift_bic == 'null' ? '' : state.swift_bic\r\n                          }\r\n                          placeholder='SWIFT/BIC'\r\n                        />\r\n                        <span className='bar'></span>\r\n                        <label htmlFor='swift_bic'>SWIFT/BIC</label>\r\n                      </div>\r\n                    </div>\r\n                    <div className='col-md-12 col-xl-5'>\r\n                      <input\r\n                        type='submit'\r\n                        name='submit'\r\n                        className='btn btn-primary w-100 btn-lg show-opt'\r\n                        value='Next Step'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default BankDetails;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\OwnershipDetails.js",["183","184","185","186","187","188","189","190","191"],"import React, { Component } from 'react';\r\nimport Service from '../services/service';\r\nimport localforage from 'localforage';\r\nimport { toast } from 'react-toastify';\r\nimport RestrictUser from './RestrictUser';\r\nimport ShortUniqueId from 'short-unique-id';\r\n\r\nclass OwnershipDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // create a ref to store the DOM element\r\n    const y = JSON.parse(localStorage.getItem('isLoggedIn'));\r\n    const shortid = require('shortid');\r\n\r\n    this.state = {\r\n      id: localStorage.getItem('insert_id'),\r\n      restrict: y == 0 ? false : true,\r\n      shareholders: [\r\n        {\r\n          name: '',\r\n          nameofshareholderError: '',\r\n          percentage: '',\r\n          address1: '',\r\n          address2: '',\r\n          city: '',\r\n          zipcode: '',\r\n          country: '',\r\n          passport_number: '',\r\n          nationality: '',\r\n          email: '',\r\n          phone: '',\r\n          authorised_signatory: false,\r\n          beneficial_owner: false,\r\n          director: false,\r\n          unique_id: shortid.generate(),\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  handleInputChange = (idx) => (evt) => {\r\n    const newShareholders = this.state.shareholders.map((shareholder, sidx) => {\r\n      if (idx !== sidx) return shareholder;\r\n      return {\r\n        ...shareholder,\r\n        [evt.target.name]: evt.target.value,\r\n        [evt.target.name + 'Error']: '',\r\n      };\r\n    });\r\n    this.setState({ shareholders: newShareholders });\r\n  };\r\n\r\n  handleCheckBoxChange = (idx) => (evt) => {\r\n    const roles = this.state.shareholders.map((shareholder, sidx) => {\r\n      if (idx !== sidx) return shareholder;\r\n      return { ...shareholder, [evt.target.name]: evt.target.checked };\r\n    });\r\n    this.setState({ shareholders: roles });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    const { history } = this.props;\r\n    const x = JSON.parse(localStorage.getItem('previous_data'));\r\n    evt.preventDefault();\r\n    const kycId = JSON.parse(localStorage.getItem('kyc_id'));\r\n    var invalidForm = false;\r\n    const errors = this.state.shareholders.map(function (shareholder, idx) {\r\n      if (!shareholder.name || /\\d/.test(shareholder.name)) {\r\n        invalidForm = true;\r\n        return {\r\n          ...shareholder,\r\n          nameofshareholderError: 'Please enter a valid value.',\r\n        };\r\n      }\r\n      if (!shareholder.percentage) {\r\n        invalidForm = true;\r\n        return {\r\n          ...shareholder,\r\n          shareholderpercentageError: 'This field is required.',\r\n        };\r\n      } else if (shareholder.percentage < 25) {\r\n        invalidForm = true;\r\n        return {\r\n          ...shareholder,\r\n          shareholderpercentageError:\r\n            'Shareholder Percentage must be grater than or equal to 25.',\r\n        };\r\n      }\r\n      if (!shareholder.address1) {\r\n        invalidForm = true;\r\n        return { ...shareholder, address1Error: 'This field is required.' };\r\n      }\r\n      if (!shareholder.city) {\r\n        invalidForm = true;\r\n        return { ...shareholder, cityError: 'This field is required.' };\r\n      }\r\n      if (!shareholder.zipcode) {\r\n        invalidForm = true;\r\n        return { ...shareholder, zipcodeError: 'This field is required.' };\r\n      }\r\n      if (!shareholder.country) {\r\n        invalidForm = true;\r\n        return { ...shareholder, countryError: 'This field is required.' };\r\n      }\r\n      if (!shareholder.passport_number) {\r\n        invalidForm = true;\r\n        return {\r\n          ...shareholder,\r\n          passportnumberError: 'This field is required.',\r\n        };\r\n      }\r\n      if (!shareholder.nationality) {\r\n        invalidForm = true;\r\n        return { ...shareholder, nationalityError: 'This field is required.' };\r\n      }\r\n      if (!shareholder.email) {\r\n        invalidForm = true;\r\n        return { ...shareholder, emailidError: 'This field is required.' };\r\n      }\r\n      if (\r\n        !shareholder.phone ||\r\n        !/^(\\+{0,})(\\d{0,})([(]{1}\\d{1,3}[)]{0,}){0,}(\\s?\\d+|\\+\\d{2,3}\\s{1}\\d+|\\d+){1}[\\s|-]?\\d+([\\s|-]?\\d+){1,2}(\\s){0,}$/gm.test(\r\n          shareholder.phone\r\n        )\r\n      ) {\r\n        invalidForm = true;\r\n        return {\r\n          ...shareholder,\r\n          phonenumberError: 'Please enter a valid value.',\r\n        };\r\n      }\r\n      return shareholder;\r\n    });\r\n\r\n    if (invalidForm) {\r\n      this.setState({ shareholders: errors });\r\n      return false;\r\n    }\r\n    var total_share = 0;\r\n    this.state.shareholders.map(function (shareholder, idx) {\r\n      if (shareholder.rpercentage !== '') {\r\n        total_share = total_share + parseInt(shareholder.percentage);\r\n      }\r\n      return true;\r\n    });\r\n    if (total_share !== 100) {\r\n      toast.error(\r\n        'Shareholder information missing, the percentage should be 100.',\r\n        {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n        }\r\n      );\r\n      return false;\r\n    }\r\n\r\n    const shareholders = this.state;\r\n    const shortid = require('shortid');\r\n\r\n    console.log('data of share', shareholders);\r\n    const y = JSON.parse(localStorage.getItem('add_user'));\r\n\r\n    const arrayData = [];\r\n\r\n    console.log('kyc id is', kycId);\r\n    const id = JSON.parse(localStorage.getItem('kyc_id'));\r\n    // console.log('x is', y);\r\n    const finalId = id == null ? x.id : id;\r\n\r\n    this.state.shareholders.map((currentvalue) => {\r\n      arrayData.push({\r\n        kyc_id: `${finalId}`,\r\n\r\n        name: `${currentvalue.name}`,\r\n        percentage: `${currentvalue.percentage}`,\r\n        address1: `${currentvalue.address1}`,\r\n        address2: `${currentvalue.address2}`,\r\n        city: `${currentvalue.city}`,\r\n        zipcode: `${currentvalue.zipcode}`,\r\n        country: `${currentvalue.country}`,\r\n        passport_number: `${currentvalue.passport_number}`,\r\n        nationality: `${currentvalue.nationality}`,\r\n        authorised_signatory: `${currentvalue.authorised_signatory}`,\r\n        beneficial_owner: `${currentvalue.beneficial_owner}`,\r\n        director: `${currentvalue.director}`,\r\n\r\n        email: `${currentvalue.email}`,\r\n        phone: `${currentvalue.phone}`,\r\n        unique_id: `${\r\n          currentvalue.unique_id ? currentvalue.unique_id : shortid.generate()\r\n        }`,\r\n      });\r\n    });\r\n\r\n    console.log('array data', arrayData);\r\n\r\n    var axios = require('axios');\r\n\r\n    var config = {\r\n      method: 'post',\r\n      url: 'http://hrm.zotto.io/api/shareholdersadd',\r\n      mode: 'no-cors',\r\n      headers: {\r\n        Authorization:\r\n          'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      data: arrayData,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log('response of add', response);\r\n        toast.success('Successfully Registered', {\r\n          position: 'top-right',\r\n          autoClose: 5000,\r\n        });\r\n        var axios = require('axios');\r\n        const email = JSON.parse(localStorage.getItem('add_user'));\r\n\r\n        var data = {\r\n          email: `${email.companyemail}`,\r\n        };\r\n\r\n        var config = {\r\n          method: 'post',\r\n          url: 'http://hrm.zotto.io/api/get',\r\n          mode: 'no-cors',\r\n          headers: {\r\n            Authorization:\r\n              'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n          },\r\n          data: data,\r\n        };\r\n\r\n        axios(config)\r\n          .then(function (response) {\r\n            console.log('response of get', response.data);\r\n\r\n            localStorage.setItem(\r\n              'previous_data',\r\n              JSON.stringify(response.data.Kyc)\r\n            );\r\n            localStorage.setItem(\r\n              'previous_data_shareholder',\r\n              JSON.stringify(response.data.Shareholders)\r\n            );\r\n          })\r\n          .catch(function (error) {\r\n            console.log('error of get', error);\r\n          });\r\n\r\n        history.push('/documents_declaration');\r\n      })\r\n      .catch(function (error) {\r\n        console.log('in error', error);\r\n        //setState({ error: error });\r\n        toast.error('Something went wrong !!');\r\n      });\r\n\r\n    // Service.update(shareholders)\r\n    //   .then((response) => {\r\n    //     if (response.data.status === 200) {\r\n    //       localforage.setItem('owner_data', this.state.shareholders);\r\n    //       this.props.history.push('/documents_declaration');\r\n    //     }\r\n    //     if (response.data.status === 500) {\r\n    //       let messageObj = response.data.message;\r\n    //       messageObj.map((message) => toast.error(message));\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     this.setState({ error: error.response });\r\n    //     toast.error('Something went wrong !!');\r\n    //   });\r\n  };\r\n\r\n  totalPercentage = () => {\r\n    var total_share = 0;\r\n    this.state.shareholders.map(function (shareholder, idx) {\r\n      if (shareholder.percentage !== '') {\r\n        total_share = total_share + parseInt(shareholder.percentage);\r\n      }\r\n      return true;\r\n    });\r\n    var x = document.getElementById('add-morefields');\r\n    if (x) {\r\n      if (total_share > 99) {\r\n        x.style.display = 'none';\r\n      } else {\r\n        x.style.display = 'block';\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAddShareholder = () => {\r\n    this.setState({\r\n      shareholders: this.state.shareholders.concat([\r\n        {\r\n          name: '',\r\n          nameofshareholderError: '',\r\n          percentage: '',\r\n          address1: '',\r\n          address2: '',\r\n          city: '',\r\n          zipcode: '',\r\n          country: '',\r\n          passport_number: '',\r\n          nationality: '',\r\n          email: '',\r\n          phone: '',\r\n          authorised_signatory: false,\r\n          beneficial_owner: false,\r\n          director: false,\r\n        },\r\n      ]),\r\n    });\r\n  };\r\n\r\n  handleRemoveShareholder = (idx) => () => {\r\n    this.setState({\r\n      shareholders: this.state.shareholders.filter((s, sidx) => idx !== sidx),\r\n    });\r\n  };\r\n\r\n  async getFormData() {\r\n    var stateData = [];\r\n    try {\r\n      stateData = await localforage.getItem('owner_data');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    var countryOfIncorporation = localStorage.getItem('countryOfIncorporation');\r\n\r\n    let shareholderper = '';\r\n    let email = '';\r\n    let pass_number = '';\r\n    let phone_number = '';\r\n    let ben_owner = '';\r\n    let dir = '';\r\n    let auth_signatory = '';\r\n    let addr_1 = '';\r\n    let addr_2 = '';\r\n    let country = '';\r\n    let postcode = '';\r\n    let city = '';\r\n    let nationality = '';\r\n\r\n    if (countryOfIncorporation == 'GB') {\r\n      var companyNumber = localStorage.getItem('company_number');\r\n      Service.getShareHolder(companyNumber)\r\n        .then((response) => {\r\n          if (!response.data.error) {\r\n            if (response.data.DATA.items.length > 0) {\r\n              for (let i = 0; i < response.data.DATA.items.length; i++) {\r\n                addr_1 = response.data.DATA.items[i].address.address_line_1;\r\n                addr_2 = response.data.DATA.items[i].address.address_line_2;\r\n                country = response.data.DATA.items[i].address.country;\r\n                postcode = response.data.DATA.items[i].address.postal_code;\r\n                city = response.data.DATA.items[i].address.locality;\r\n\r\n                if (stateData && stateData[i]) {\r\n                  shareholderper = stateData[i].shareholderpercentage;\r\n                  email = stateData[i].emailid;\r\n                  pass_number = stateData[i].passportnumber;\r\n                  phone_number = stateData[i].phonenumber;\r\n                  ben_owner = stateData[i].beneficial_owner;\r\n                  dir = stateData[i].director;\r\n                  auth_signatory = stateData[i].authorised_signatory;\r\n                } else {\r\n                  shareholderper = '';\r\n                  email = '';\r\n                  pass_number = '';\r\n                  phone_number = '';\r\n                  ben_owner = '';\r\n                  dir = '';\r\n                  auth_signatory = '';\r\n                }\r\n\r\n                if (i === 0) {\r\n                  this.setState({\r\n                    shareholders: [\r\n                      {\r\n                        name: response.data.DATA.items[i].name,\r\n                        nationality: response.data.DATA.items[i].nationality,\r\n                        address1: addr_1,\r\n                        address2: addr_2,\r\n                        city: city,\r\n                        zipcode: postcode,\r\n                        country: country,\r\n                        shareholderpercentage: shareholderper,\r\n                        email: email,\r\n                        passport_number: pass_number,\r\n                        phone: phone_number,\r\n                        beneficial_owner: ben_owner,\r\n                        director: dir,\r\n                        authorised_signatory: auth_signatory,\r\n                      },\r\n                    ],\r\n                  });\r\n                }\r\n                if (i > 0) {\r\n                  this.setState({\r\n                    shareholders: this.state.shareholders.concat([\r\n                      {\r\n                        name: response.data.DATA.items[i].name,\r\n                        nationality: response.data.DATA.items[i].nationality,\r\n                        address1: addr_1,\r\n                        address2: addr_2,\r\n                        city: city,\r\n                        zipcode: postcode,\r\n                        country: country,\r\n                        percentage: shareholderper,\r\n                        email: email,\r\n                        passport_number: pass_number,\r\n                        phone: phone_number,\r\n                        beneficial_owner: ben_owner,\r\n                        director: dir,\r\n                        authorised_signatory: auth_signatory,\r\n                      },\r\n                    ]),\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    if (countryOfIncorporation == 'DK') {\r\n      try {\r\n        var dkOwner = await localforage.getItem('dk_comp_owners');\r\n\r\n        for (let i = 0; i < dkOwner.length; i++) {\r\n          if (stateData) {\r\n            shareholderper = stateData[i].shareholderpercentage;\r\n            email = stateData[i].emailid;\r\n            pass_number = stateData[i].passportnumber;\r\n            phone_number = stateData[i].phonenumber;\r\n            ben_owner = stateData[i].beneficial_owner;\r\n            dir = stateData[i].director;\r\n            auth_signatory = stateData[i].authorised_signatory;\r\n            nationality = stateData[i].nationality;\r\n            addr_1 = stateData[i].address1;\r\n            addr_2 = stateData[i].address2;\r\n            country = stateData[i].country;\r\n            postcode = stateData[i].zipcode;\r\n            city = stateData[i].city;\r\n          }\r\n          if (i === 0) {\r\n            this.setState({\r\n              shareholders: [\r\n                {\r\n                  name: dkOwner[i].name,\r\n                  nationality: nationality,\r\n                  address1: addr_1,\r\n                  address2: addr_2,\r\n                  city: city,\r\n                  zipcode: postcode,\r\n                  country: country,\r\n                  percentage: shareholderper,\r\n                  email: email,\r\n                  passport_number: pass_number,\r\n                  phone: phone_number,\r\n                  beneficial_owner: ben_owner,\r\n                  director: dir,\r\n                  authorised_signatory: auth_signatory,\r\n                },\r\n              ],\r\n            });\r\n          }\r\n          if (i > 0) {\r\n            this.setState({\r\n              shareholders: this.state.shareholders.concat([\r\n                {\r\n                  name: dkOwner[i].name,\r\n                  percentage: shareholderper,\r\n                  email: email,\r\n                  passport_number: pass_number,\r\n                  phone: phone_number,\r\n                  beneficial_owner: ben_owner,\r\n                  director: dir,\r\n                  authorised_signatory: auth_signatory,\r\n                },\r\n              ]),\r\n            });\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleRemoveShareholder = (idx, shareholder_id) => () => {\r\n    var axios = require('axios');\r\n    var data = JSON.stringify({\r\n      email: 'singhbhavesh609@gmail.com',\r\n    });\r\n\r\n    var config = {\r\n      method: 'delete',\r\n      url: `http://hrm.zotto.io/api/shareholderdelete/${shareholder_id}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    this.setState({\r\n      shareholders: this.state.shareholders.filter((s, sidx) => idx !== sidx),\r\n    });\r\n  };\r\n  x;\r\n  componentDidMount() {\r\n    const x = JSON.parse(localStorage.getItem('previous_data_shareholder'));\r\n    const b = JSON.parse(\r\n      localStorage.getItem('previous_data_if_available_shareholder')\r\n    );\r\n    if (b) {\r\n      if (b.length > 0) {\r\n        this.setState({ shareholders: [...b] });\r\n      }\r\n    }\r\n    const shortid = require('shortid');\r\n\r\n    this.setState({ restrict: !this.state.restrict });\r\n    this.getFormData();\r\n\r\n    var a = JSON.parse(localStorage.getItem('ownership_detail'));\r\n    console.log('x is', x);\r\n\r\n    const y = JSON.parse(localStorage.getItem('isLoggedIn'));\r\n    // if (y == 0) {\r\n    //   this.setState({ restrict: true });\r\n    // } else if (y == 1) {\r\n    //   this.setState((prevState) => ({\r\n    //     restrict: prevState.restrict,\r\n    //   }));\r\n    // }\r\n\r\n    if (x) {\r\n      if (x.length > 0) {\r\n        this.setState({ shareholders: [...x] });\r\n      }\r\n      console.log('state at page load', this.state);\r\n      var axios = require('axios');\r\n      const email = JSON.parse(localStorage.getItem('add_user'));\r\n\r\n      var data = {\r\n        email: `${email.companyemail}`,\r\n      };\r\n\r\n      var config = {\r\n        method: 'post',\r\n        url: 'http://hrm.zotto.io/api/get',\r\n        headers: {\r\n          Authorization:\r\n            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      axios(config)\r\n        .then(function (response) {\r\n          console.log('response of get', response.data);\r\n\r\n          localStorage.setItem(\r\n            'previous_data',\r\n            JSON.stringify(response.data.Kyc)\r\n          );\r\n          localStorage.setItem(\r\n            'previous_data_shareholder',\r\n            JSON.stringify(response.data.Shareholders)\r\n          );\r\n        })\r\n        .catch(function (error) {\r\n          console.log('error of get', error);\r\n        });\r\n    }\r\n\r\n    console.log('state is', this.state.restrict);\r\n  }\r\n\r\n  componentDidUpdate(state) {\r\n    localStorage.setItem('ownership_detail', JSON.stringify(this.state));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.restrict ? (\r\n          <RestrictUser />\r\n        ) : (\r\n          <div className='content-box'>\r\n            <div className='container-fluid h-100'>\r\n              <div className='row justify-content-center align-items-center h-100'>\r\n                <div className='col-sm-12 py-4'>\r\n                  <div className='text-center steping'>\r\n                    <span>Step 5 of 6</span>\r\n                  </div>\r\n                  <div\r\n                    onClick={() => this.props.history.push('/bank_details')}\r\n                    className='text-center steping'\r\n                    style={{ marginLeft: '80%', cursor: 'pointer' }}\r\n                  >\r\n                    <span>Back</span>\r\n                  </div>\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    <h4 className='pb-4 fs-2 text-center fw-bold'>\r\n                      Ownership Details- Shareholders\r\n                    </h4>\r\n                    {this.state.shareholders.map((shareholder, idx) => (\r\n                      <div className='row justify-content-center g-3' key={idx}>\r\n                        {idx >= 1 && (\r\n                          <div className='col-md-6 col-xl-10 text-end'>\r\n                            <hr className='mt-0' />\r\n                            <button\r\n                              type='button'\r\n                              onClick={this.handleRemoveShareholder(\r\n                                idx,\r\n                                shareholder.id\r\n                              )}\r\n                              className='btn btn-sm btn-danger'\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating'>\r\n                            <input\r\n                              type='text'\r\n                              name='name'\r\n                              autoComplete='off'\r\n                              value={shareholder.name}\r\n                              onChange={this.handleInputChange(idx)}\r\n                              className='form-control'\r\n                              id='nameofshareholder'\r\n                              placeholder='Name of Shareholder *'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='nameofshareholder'>\r\n                              Name of Shareholder{' '}\r\n                              <strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.nameofshareholderError}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating'>\r\n                            <input\r\n                              type='Number'\r\n                              className='form-control'\r\n                              name='percentage'\r\n                              autoComplete='off'\r\n                              id='shareholderpercentage'\r\n                              onBlur={this.totalPercentage}\r\n                              onChange={this.handleInputChange(idx)}\r\n                              value={shareholder.percentage}\r\n                              placeholder='Shareholder Percentage *'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='shareholderpercentage'>\r\n                              Shareholder Percentage{' '}\r\n                              <strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.shareholderpercentageError}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating overflow-hidden'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              name='address1'\r\n                              autoComplete='off'\r\n                              id='address1'\r\n                              onChange={this.handleInputChange(idx)}\r\n                              value={shareholder.address1}\r\n                              placeholder='Shareholder Address Line 1 *'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='address1'>\r\n                              Address Line 1\r\n                              <strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.address1Error}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating overflow-hidden'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              name='address2'\r\n                              autoComplete='off'\r\n                              id='address2'\r\n                              onChange={this.handleInputChange(idx)}\r\n                              value={shareholder.address2}\r\n                              placeholder='Shareholder Percentage *'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='address2'>Address Line 2</label>\r\n                            <div className='form-text'>\r\n                              {shareholder.address2Error}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating overflow-hidden'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              name='city'\r\n                              autoComplete='off'\r\n                              id='city'\r\n                              onChange={this.handleInputChange(idx)}\r\n                              value={shareholder.city}\r\n                              placeholder='*'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='city'>\r\n                              City<strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.cityError}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating overflow-hidden'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              name='zipcode'\r\n                              autoComplete='off'\r\n                              id='zipcode'\r\n                              onChange={this.handleInputChange(idx)}\r\n                              value={shareholder.zipcode}\r\n                              placeholder='*'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='zipcode'>\r\n                              Zip Code<strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.zipcodeError}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating overflow-hidden'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              name='country'\r\n                              autoComplete='off'\r\n                              id='country'\r\n                              onChange={this.handleInputChange(idx)}\r\n                              value={shareholder.country}\r\n                              placeholder='*'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='country'>\r\n                              Country<strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.countryError}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              name='passport_number'\r\n                              autoComplete='off'\r\n                              id='passportnumber'\r\n                              value={shareholder.passport_number}\r\n                              onChange={this.handleInputChange(idx)}\r\n                              placeholder='Passport Number *'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='passportnumber'>\r\n                              Passport Number{' '}\r\n                              <strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.passportnumberError}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating'>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              name='nationality'\r\n                              id='nationality'\r\n                              autoComplete='off'\r\n                              value={shareholder.nationality}\r\n                              onChange={this.handleInputChange(idx)}\r\n                              placeholder='Nationality *'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='nationality'>\r\n                              Nationality{' '}\r\n                              <strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.nationalityError}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='mb-3'>\r\n                            <label\r\n                              htmlFor='areyuo'\r\n                              className='form-label label-text d-block'\r\n                            >\r\n                              Role in the company (Please tick all applicable\r\n                              boxes)\r\n                            </label>\r\n                            <div className='form-check form-check-inline'>\r\n                              <input\r\n                                className='form-check-input'\r\n                                type='checkbox'\r\n                                checked={\r\n                                  shareholder.authorised_signatory === 'true'\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                onClick={this.handleCheckBoxChange(idx)}\r\n                                name='authorised_signatory'\r\n                                id='authorised_signatory'\r\n                                value='Authorised Signatory'\r\n                              />\r\n                              <label\r\n                                className='form-check-label'\r\n                                htmlFor='authorised_signatory'\r\n                              >\r\n                                Authorised Signatory\r\n                              </label>\r\n                            </div>\r\n                            <div className='form-check form-check-inline'>\r\n                              <input\r\n                                className='form-check-input'\r\n                                type='checkbox'\r\n                                checked={\r\n                                  shareholder.beneficial_owner === true\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                onClick={this.handleCheckBoxChange(idx)}\r\n                                name='beneficial_owner'\r\n                                id='beneficial_owner'\r\n                                value='Beneficial Owner'\r\n                              />\r\n                              <label\r\n                                className='form-check-label'\r\n                                htmlFor='beneficial_owner'\r\n                              >\r\n                                Beneficial Owner\r\n                              </label>\r\n                            </div>\r\n                            <div className='form-check form-check-inline'>\r\n                              <input\r\n                                className='form-check-input'\r\n                                type='checkbox'\r\n                                checked={\r\n                                  shareholder.director === true ? true : false\r\n                                }\r\n                                onClick={this.handleCheckBoxChange(idx)}\r\n                                name='director'\r\n                                id='director'\r\n                                value='Director'\r\n                              />\r\n                              <label\r\n                                className='form-check-label'\r\n                                htmlFor='director'\r\n                              >\r\n                                Director\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating'>\r\n                            <input\r\n                              type='email'\r\n                              className='form-control'\r\n                              autoComplete='off'\r\n                              onChange={this.handleInputChange(idx)}\r\n                              name='email'\r\n                              value={shareholder.email}\r\n                              id='emailid'\r\n                              placeholder='Email'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='emailid'>\r\n                              Email <strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.emailidError}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6 col-xl-5'>\r\n                          <div className='form-floating'>\r\n                            <input\r\n                              type='tel'\r\n                              className='form-control'\r\n                              name='phone'\r\n                              autoComplete='off'\r\n                              id='phonenumber'\r\n                              value={shareholder.phone}\r\n                              onChange={this.handleInputChange(idx)}\r\n                              placeholder='Phone Number'\r\n                            />\r\n                            <span className='bar'></span>\r\n                            <label htmlFor='phonenumber'>\r\n                              Phone Number{' '}\r\n                              <strong className='text-danger'>*</strong>\r\n                            </label>\r\n                            <div className='form-text'>\r\n                              {shareholder.phonenumberError}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                    <div className='row justify-content-center g-3 mt-2'>\r\n                      {this.state.shareholders.length <= 3 && (\r\n                        <div\r\n                          className='col-md-12 col-xl-10 text-center'\r\n                          id='add-morefields'\r\n                        >\r\n                          <button\r\n                            type='button'\r\n                            data-addfield='addmore'\r\n                            className='btn btn-sm btn-success'\r\n                            onClick={this.handleAddShareholder}\r\n                          >\r\n                            + Add More\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                      <div className='col-md-12 col-xl-5'>\r\n                        <input\r\n                          type='submit'\r\n                          name='submit'\r\n                          className='btn btn-primary w-100 btn-lg rounded-3'\r\n                          value='Next Step'\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default OwnershipDetails;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\DocumentsDeclaration.js",["192","193","194","195","196","197","198"],"import React, { Component } from 'react';\r\nimport Service from '../services/service';\r\nimport SignatureCanvas from 'react-signature-canvas';\r\nimport localforage from 'localforage';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { createReadStream } from 'fs';\r\nimport RestrictUser from './RestrictUser';\r\ntoast.configure();\r\n\r\nvar fileExt = ['pdf', 'doc', 'jpeg', 'jpg', 'png'];\r\nlet ShareholderFilesArr = [];\r\nlet residentialFilesArr = [];\r\nlet registerFilesArr = [];\r\nlet bankFilesArr = [];\r\nlet signatureFilesArr = [];\r\nclass DocumentsDeclaration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // create a ref to store the DOM element\r\n    this.nameEl = React.createRef();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.uploadRegistration = this.uploadRegistration.bind(this);\r\n    this.uploadBankAccount = this.uploadBankAccount.bind(this);\r\n    this.uploadSignature = this.uploadSignature.bind(this);\r\n    this.uploadResidential = this.uploadResidential.bind(this);\r\n    this.uploadShareholder = this.uploadShareholder.bind(this);\r\n    this.handleInputChanged = this.handleInputChanged.bind(this);\r\n    this.removeShareholder = this.removeShareholder.bind(this);\r\n    this.removeResidential = this.removeResidential.bind(this);\r\n    this.removeRegister = this.removeRegister.bind(this);\r\n    this.removeBankFile = this.removeBankFile.bind(this);\r\n    this.removeSignature = this.removeSignature.bind(this);\r\n\r\n    const y = JSON.parse(localStorage.getItem('isLoggedIn'));\r\n    this.state = {\r\n      restrict: y == 0 ? true : false,\r\n      shareholderFile: null,\r\n      registrationFile: null,\r\n      bankFile: null,\r\n      signatureFile: null,\r\n      residentialFile: null,\r\n      declaration: false,\r\n      shareholder_name: '',\r\n      signature: '',\r\n      filesShareHolder: '',\r\n      filesResidential: '',\r\n\r\n      name: '',\r\n    };\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const { history } = this.props;\r\n\r\n    console.log('complete docs', this.state);\r\n    const x = JSON.parse(localStorage.getItem('previous_data'));\r\n\r\n    var id = JSON.parse(localStorage.getItem('kyc_id'));\r\n    var validForm = true;\r\n    if (!this.state.registrationFile) {\r\n      this.setState({ registrationFileError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!this.state.signatureFile) {\r\n      this.setState({ signatureFileError: 'This field is required.' });\r\n    }\r\n    if (!this.state.bankFile) {\r\n      this.setState({ bankFileError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!this.state.filesShareHolder) {\r\n      this.setState({ shareholderFileError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!this.state.filesResidential) {\r\n      this.setState({ residentialFileError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!this.state.declaration) {\r\n      this.setState({ declarationError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!this.state.shareholder_name) {\r\n      this.setState({ shareholder_nameError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n    if (!this.state.shareholder_name) {\r\n      this.setState({ shareholder_nameError: 'This field is required.' });\r\n      validForm = false;\r\n    }\r\n\r\n    if (/\\d/.test(this.state.shareholder_name)) {\r\n      this.setState({ shareholder_nameError: 'Please enter a valid name.' });\r\n      validForm = false;\r\n    }\r\n    // if (this.sigPad.isEmpty()) {\r\n    //   this.setState({ sigPadError: 'This field is required.' });\r\n    //   validForm = false;\r\n    // }\r\n    if (validForm) {\r\n      //var sign = this.sigPad.getTrimmedCanvas().toDataURL('image/png');\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\r\n        'Authorization',\r\n        'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJhdWQiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXQiOjE2MjE1MzYxMTMsIm5iZiI6MTYyMTUzNjExMywiZXhwIjoxNjIxNjIyNTEzLCJwYXlsb2FkIjp7ImlkIjoiMTYyMDU3MzM5OTIxOSJ9fQ.G7cyNtmMsbWsMNC2NvCJSm4X9uGnSM--o4uTMxrvMdQ'\r\n      );\r\n\r\n      var formdata = new FormData();\r\n      formdata.append(\r\n        'copycompanyreg',\r\n        this.state.registrationFile[0],\r\n        '[PROXY]'\r\n      );\r\n      formdata.append('proofcompanybank', this.state.bankFile[0], '[PROXY]');\r\n      formdata.append(\r\n        'passportshareholder',\r\n        this.state.filesShareHolder[0],\r\n        '[PROXY]'\r\n      );\r\n      formdata.append(\r\n        'addressproofshareholder',\r\n        this.state.filesResidential[0],\r\n        '[PROXY]'\r\n      );\r\n      formdata.append('signature', this.state.signatureFile[0], '[PROXY]');\r\n      formdata.append('name', `${this.state.shareholder_name}`);\r\n      formdata.append('id', `${x.id}`);\r\n      formdata.append('status', 'complete');\r\n\r\n      var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow',\r\n      };\r\n\r\n      fetch('http://hrm.zotto.io/api/upload', requestOptions)\r\n        .then((response) => response.text())\r\n        .then((result) => {\r\n          toast.success('Successfully Added', {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n          });\r\n\r\n          history.push('/kyc_success');\r\n        })\r\n        .catch((error) => {\r\n          toast.error('Something went wrong', {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n          });\r\n        });\r\n\r\n      // if (this.state.registrationFile) {\r\n      //   for (const key of Object.keys(this.state.registrationFile)) {\r\n      //     data.append('copycompanyreg', this.state.registrationFile[key]);\r\n      //   }\r\n      // }\r\n      // if (this.state.bankFile) {\r\n      //   for (const key of Object.keys(this.state.bankFile)) {\r\n      //     data.append('proofcompanybank', this.state.bankFile[key]);\r\n      //   }\r\n      // }\r\n\r\n      // if (this.state.filesShareHolder) {\r\n      //   for (const key of Object.keys(this.state.filesShareHolder)) {\r\n      //     data.append('passportshareholder', this.state.filesShareHolder[key]);\r\n      //   }\r\n      // }\r\n\r\n      // if (this.state.filesResidential) {\r\n      //   for (const key of Object.keys(this.state.filesResidential)) {\r\n      //     data.append(\r\n      //       'addressproofshareholder',\r\n      //       this.state.filesResidential[key]\r\n      //     );\r\n      //   }\r\n      // }\r\n\r\n      // Service.update(data)\r\n      //   .then((response) => {\r\n      //     if (response.data.status === 500) {\r\n      //       toast.error(response.data.message, {\r\n      //         position: 'top-right',\r\n      //         autoClose: 5000,\r\n      //       });\r\n      //     }\r\n      //     if (response.data.status === 200) {\r\n      //       localStorage.clear();\r\n      //       localforage.clear();\r\n      //       ShareholderFilesArr = [];\r\n      //       residentialFilesArr = [];\r\n      //       registerFilesArr = [];\r\n      //       bankFilesArr = [];\r\n      //       toast.success(response.data.message, {\r\n      //         position: 'top-right',\r\n      //         autoClose: 5000,\r\n      //       });\r\n      //       setTimeout(() => {\r\n      //         localStorage.removeItem('insert_id');\r\n      //         this.props.history.push('/');\r\n      //       }, 5000);\r\n      //     }\r\n      //   })\r\n      //   .catch((error) => {\r\n      //     console.log('=====' + error);\r\n      //     this.setState({ error: error.response });\r\n      //     toast.error('Something went wrong !!', {\r\n      //       position: 'top-right',\r\n      //       autoClose: 5000,\r\n      //     });\r\n      //   });\r\n    }\r\n  }\r\n\r\n  uploadRegistration(e) {\r\n    var id = JSON.parse(localStorage.getItem('kyc_id'));\r\n    registerFilesArr = [];\r\n    const files = e.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n      let ext = files[i].name.split('.').pop();\r\n      if (!fileExt.includes(ext.toLowerCase())) {\r\n        this.setState({\r\n          registrationFile: '',\r\n          registrationFileError:\r\n            'Please upload file in pdf, doc, jpeg, jpg, png format.',\r\n        });\r\n        return false;\r\n      } else {\r\n        registerFilesArr.push(files[0]);\r\n      }\r\n    }\r\n    this.setState({ registrationFile: files, registrationFileError: '' });\r\n    console.log('files is', files[0]);\r\n\r\n    console.log('document state', this.state.registrationFile);\r\n  }\r\n\r\n  removeRegister() {\r\n    registerFilesArr = [];\r\n    this.setState({ registrationFile: '' });\r\n  }\r\n\r\n  removeSignature() {\r\n    signatureFilesArr = [];\r\n    this.setState({ signatureFile: '' });\r\n  }\r\n\r\n  uploadBankAccount(e) {\r\n    bankFilesArr = [];\r\n    const files = e.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n      let ext = files[i].name.split('.').pop();\r\n      if (!fileExt.includes(ext.toLowerCase())) {\r\n        this.setState({\r\n          bankFile: '',\r\n          bankFileError:\r\n            'Please upload file in pdf, doc, jpeg, jpg, png format.',\r\n        });\r\n        return false;\r\n      } else {\r\n        bankFilesArr.push(files[0]);\r\n      }\r\n    }\r\n    this.setState({ bankFile: files, bankFileError: '' });\r\n  }\r\n\r\n  uploadSignature(e) {\r\n    signatureFilesArr = [];\r\n    const files = e.target.files;\r\n    for (let i = 0; i < files.length; i++) {\r\n      let ext = files[i].name.split('.').pop();\r\n      if (!fileExt.includes(ext.toLowerCase())) {\r\n        this.setState({\r\n          signatureFile: '',\r\n          signatureFileError:\r\n            'Please upload file in pdf, doc, jpeg, jpg, png format.',\r\n        });\r\n        return false;\r\n      } else {\r\n        signatureFilesArr.push(files[0]);\r\n      }\r\n    }\r\n    console.log('files in sign', files);\r\n    this.setState({ signatureFile: files, signatureFileError: '' });\r\n  }\r\n\r\n  removeBankFile() {\r\n    bankFilesArr = [];\r\n    this.setState({ bankFile: '' });\r\n  }\r\n\r\n  uploadShareholder(e) {\r\n    var countlenght = ShareholderFilesArr.length;\r\n    const files = e.target.files;\r\n    if (countlenght < 4 && files.length + countlenght <= 4) {\r\n      if (files.length > 4) {\r\n        this.setState({\r\n          shareholderFile: '',\r\n          shareholderFileError: 'Please upload max 4 files.',\r\n        });\r\n        return false;\r\n      }\r\n      for (let i = 0; i < files.length; i++) {\r\n        let ext = files[i].name.split('.').pop();\r\n        if (!fileExt.includes(ext.toLowerCase())) {\r\n          this.setState({\r\n            shareholderFile: '',\r\n            shareholderFileError:\r\n              'Please upload file in pdf, doc, jpeg, jpg, png format.',\r\n          });\r\n          return false;\r\n        } else {\r\n          ShareholderFilesArr.push(files[i]);\r\n        }\r\n      }\r\n      this.setState({\r\n        shareholderFile: files,\r\n        shareholderFileError: '',\r\n        filesShareHolder: ShareholderFilesArr,\r\n      });\r\n    } else {\r\n      alert('Max 4 files can be uploaded');\r\n    }\r\n  }\r\n  removeShareholder(e, index) {\r\n    ShareholderFilesArr.splice(index, 1);\r\n    this.setState({ filesShareHolder: ShareholderFilesArr });\r\n  }\r\n\r\n  uploadResidential(e) {\r\n    var countlenght = residentialFilesArr.length;\r\n    const files = e.target.files;\r\n    if (countlenght < 4 && files.length + countlenght <= 4) {\r\n      if (files.length > 4) {\r\n        document.getElementById('residentialFileView').innerHTML = '';\r\n        this.setState({\r\n          residentialFile: '',\r\n          residentialFileError: 'Please upload max 4 files.',\r\n        });\r\n        return false;\r\n      }\r\n      for (let i = 0; i < files.length; i++) {\r\n        let ext = files[i].name.split('.').pop();\r\n        if (!fileExt.includes(ext.toLowerCase())) {\r\n          this.setState({\r\n            residentialFile: '',\r\n            residentialFileError:\r\n              'Please upload file in pdf, doc, jpeg, jpg, png format.',\r\n          });\r\n          return false;\r\n        } else {\r\n          residentialFilesArr.push(files[i]);\r\n        }\r\n      }\r\n      this.setState({\r\n        residentialFile: files,\r\n        residentialFileError: '',\r\n        filesResidential: residentialFilesArr,\r\n      });\r\n    } else {\r\n      alert('Max 4 files can be uploaded');\r\n    }\r\n  }\r\n\r\n  removeResidential(e, index) {\r\n    residentialFilesArr.splice(index, 1);\r\n    this.setState({ filesResidential: residentialFilesArr });\r\n  }\r\n\r\n  handleInputChanged(e) {\r\n    const target = e.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n\r\n    this.setState({\r\n      declarationError: '',\r\n      shareholder_nameError: '',\r\n      sigPadError: '',\r\n    });\r\n  }\r\n\r\n  sigPad = {};\r\n  clear = () => {\r\n    this.sigPad.clear();\r\n  };\r\n\r\n  componentDidMount() {\r\n    ShareholderFilesArr = [];\r\n    residentialFilesArr = [];\r\n    registerFilesArr = [];\r\n    bankFilesArr = [];\r\n\r\n    const x = JSON.parse(localStorage.getItem('docs'));\r\n    console.log('x is', x);\r\n    if (x) {\r\n      this.setState({\r\n        shareholderFile: x.shareholderFile,\r\n        registrationFile: x.registrationFile,\r\n        bankFile: x.bankFile,\r\n        residentialFile: x.residentialFile,\r\n        declaration: x.declaration,\r\n        shareholder_name: x.shareholder_name,\r\n        signature: x.signature,\r\n        filesShareHolder: x.filesShareHolder,\r\n        filesResidential: x.filesResidential,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(state) {\r\n    localStorage.setItem('docs', JSON.stringify(state));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.restrict ? (\r\n          <RestrictUser />\r\n        ) : (\r\n          <div className='content-box'>\r\n            <div className='container-fluid h-100'>\r\n              <div className='row justify-content-center align-items-center h-100'>\r\n                <div className='col-sm-12 py-4'>\r\n                  <div className='text-center steping'>\r\n                    <span>Step 6 of 6</span>\r\n                  </div>\r\n                  <div\r\n                    onClick={() =>\r\n                      this.props.history.push('/ownership_details')\r\n                    }\r\n                    className='text-center steping'\r\n                    style={{ marginLeft: '80%', cursor: 'pointer' }}\r\n                  >\r\n                    <span>Back</span>\r\n                  </div>\r\n                  <h4 className='pb-4 fs-2 text-center fw-bold'>\r\n                    Documents and Declaration\r\n                  </h4>\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    <div className='row justify-content-center g-3'>\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <p className='mb-1 field-text'>\r\n                          Copy of Company Registration{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </p>\r\n                        <label className='drop-input'>\r\n                          <input\r\n                            type='file'\r\n                            name='registrationFile'\r\n                            id='file1'\r\n                            onChange={this.uploadRegistration}\r\n                          />\r\n                          <div className='text-muted small'>\r\n                            Drag & Drop (or){' '}\r\n                            <span className='text-primary'>Choose File</span>\r\n                          </div>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {this.state.registrationFileError}\r\n                        </div>\r\n                        {this.state.registrationFile\r\n                          ? registerFilesArr.map((register, i) => (\r\n                              <div key={i}>\r\n                                <div className='filesname'>\r\n                                  <span onClick={this.removeRegister}>\r\n                                    &times;\r\n                                  </span>\r\n                                  {register.name}\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                          : ''}\r\n                      </div>\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <p className='mb-1 field-text'>\r\n                          Proof Of Company Bank Account{' '}\r\n                          <strong className='text-danger'>*</strong>\r\n                        </p>\r\n                        <label className='drop-input'>\r\n                          <input\r\n                            type='file'\r\n                            name='bankFile'\r\n                            id='file2'\r\n                            onChange={this.uploadBankAccount}\r\n                          />\r\n                          <div className='text-muted small'>\r\n                            Drag & Drop (or){' '}\r\n                            <span className='text-primary'>Choose File</span>\r\n                          </div>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {this.state.bankFileError}\r\n                        </div>\r\n                        <div className='text-muted small fst-italic lh-sm'>\r\n                          It should contain Name, address, account number, IBAN,\r\n                          Swift code. If it is a a screenshot of the account\r\n                          from computer, the web address must be visible. The\r\n                          account balance visibility is not necessary.\r\n                        </div>\r\n                        {this.state.bankFile\r\n                          ? bankFilesArr.map((bankfile, i) => (\r\n                              <div key={i}>\r\n                                <div className='filesname'>\r\n                                  <span onClick={this.removeBankFile}>\r\n                                    &times;\r\n                                  </span>\r\n                                  {bankfile.name}\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                          : ''}\r\n                      </div>\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <p className='mb-1 field-text'>\r\n                          Passport Copy of Shareholder\r\n                          <strong className='text-danger'>*</strong>\r\n                          <strong\r\n                            className='float-end bg-light px-2 d-inline-block text-muted rounded-pill fs-12px'\r\n                            title='In this field, it should be possible to upload max 4 files'\r\n                          >\r\n                            i\r\n                          </strong>\r\n                        </p>\r\n                        <label className='drop-input'>\r\n                          <input\r\n                            type='file'\r\n                            name='shareholderFile'\r\n                            id='uploadShareholder'\r\n                            onChange={this.uploadShareholder}\r\n                            multiple\r\n                          />\r\n                          <div className='text-muted small'>\r\n                            Drag & Drop (or){' '}\r\n                            <span className='text-primary'>Choose File(s)</span>\r\n                          </div>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {this.state.shareholderFileError}\r\n                        </div>\r\n                        <div className='text-muted small fst-italic'>\r\n                          Copy of all the shareholders who own more than 25%.\r\n                        </div>\r\n                        {this.state.shareholderFile\r\n                          ? ShareholderFilesArr.map((sharefiles, i) => (\r\n                              <div key={i}>\r\n                                <div className='filesname'>\r\n                                  <span\r\n                                    onClick={(e) =>\r\n                                      this.removeShareholder(e, i)\r\n                                    }\r\n                                  >\r\n                                    &times;\r\n                                  </span>\r\n                                  {sharefiles.name}\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                          : ''}\r\n                      </div>\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <p className='mb-1 field-text'>\r\n                          Residential Address Proof of Shareholders.\r\n                          <strong className='text-danger'>*</strong>\r\n                          <strong\r\n                            className='float-end bg-light px-2 d-inline-block text-muted rounded-pill fs-12px'\r\n                            title='In this field, it should be possible to upload max 4 files'\r\n                          >\r\n                            i\r\n                          </strong>\r\n                        </p>\r\n                        <label className='drop-input'>\r\n                          <input\r\n                            type='file'\r\n                            name='residentialFile'\r\n                            id='residentialFile'\r\n                            onChange={this.uploadResidential}\r\n                            multiple\r\n                          />\r\n                          <div className='text-muted small'>\r\n                            Drag & Drop (or){' '}\r\n                            <span className='text-primary'>Choose File(s)</span>\r\n                          </div>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {this.state.residentialFileError}\r\n                        </div>\r\n                        <div className='text-muted small fst-italic'>\r\n                          The document should not be older than 3 months. Copy\r\n                          of all the Shareholders who own more than 25%.\r\n                        </div>\r\n                        {this.state.residentialFile\r\n                          ? residentialFilesArr.map((resifiles, i) => (\r\n                              <div key={i}>\r\n                                <div className='filesname'>\r\n                                  <span\r\n                                    onClick={(e) =>\r\n                                      this.removeResidential(e, i)\r\n                                    }\r\n                                  >\r\n                                    &times;\r\n                                  </span>\r\n                                  {resifiles.name}\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                          : ''}\r\n                      </div>\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <p className='mb-1 field-text'>\r\n                          Signature\r\n                          <strong className='text-danger'>*</strong>\r\n                        </p>\r\n                        <label className='drop-input'>\r\n                          <input\r\n                            type='file'\r\n                            name='sinatureFile'\r\n                            id='file3'\r\n                            onChange={this.uploadSignature}\r\n                          />\r\n                          <div className='text-muted small'>\r\n                            Drag & Drop (or){' '}\r\n                            <span className='text-primary'>Choose File</span>\r\n                          </div>\r\n                        </label>\r\n                        <div className='form-text'>\r\n                          {this.state.signatureFileError}\r\n                        </div>\r\n\r\n                        {this.state.signatureFile\r\n                          ? signatureFilesArr.map((signaturefile, i) => (\r\n                              <div key={i}>\r\n                                <div className='filesname'>\r\n                                  <span onClick={this.removeSignature}>\r\n                                    &times;\r\n                                  </span>\r\n                                  {signaturefile.name}\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                          : ''}\r\n\r\n                        {/* <p className='mb-1 field-text'>\r\n                      Signature <strong className='text-danger'>*</strong>\r\n                    </p>\r\n                    <div className='position-relative'>\r\n                      <div className='signature-container'>\r\n                        <SignatureCanvas\r\n                          penColor='black'\r\n                          canvasProps={{ className: 'sigPad' }}\r\n                          ref={(ref) => {\r\n                            this.sigPad = ref;\r\n                          }}\r\n                          onBegin={this.handleInputChanged}\r\n                        />\r\n                        <button\r\n                          type='button'\r\n                          className='btn btn-sm btn-link text-decoration-none'\r\n                          id='signature_clearButton'\r\n                          onClick={this.clear}\r\n                        >\r\n                          Clear\r\n                        </button>\r\n                      </div>\r\n                      <div className='form-text'>{this.state.sigPadError}</div>\r\n                    </div> */}\r\n                      </div>\r\n                      <div className='col-md-6 col-xl-5'>\r\n                        <p className='mb-1 field-text'>\r\n                          Declaration <strong className='text-danger'>*</strong>\r\n                        </p>\r\n                        <div className='form-check'>\r\n                          <input\r\n                            className='form-check-input'\r\n                            name='declaration'\r\n                            type='checkbox'\r\n                            id='defaultCheck1'\r\n                            value={this.state.declaration}\r\n                            onChange={this.handleInputChanged}\r\n                          />\r\n                          <label\r\n                            className='form-check-label small'\r\n                            htmlFor='defaultCheck1'\r\n                          >\r\n                            The undersigned hereby accepts this binding 24\r\n                            months contract and agreement and is aware & agrees\r\n                            with ZOTTO LTD.\r\n                          </label>\r\n                          <div className='form-text'>\r\n                            {this.state.declarationError}\r\n                          </div>\r\n                        </div>\r\n                        <div className='form-floating mt-3 mt-md-4'>\r\n                          <input\r\n                            type='text'\r\n                            name='shareholder_name'\r\n                            autoComplete='off'\r\n                            className='form-control'\r\n                            id='namefield'\r\n                            placeholder='Name *'\r\n                            maxLength='12'\r\n                            onChange={this.handleInputChanged}\r\n                          />\r\n                          <label htmlFor='namefield'>\r\n                            Name <strong className='text-danger'>*</strong>\r\n                          </label>\r\n                          <span className='bar'></span>\r\n                          <div className='form-text'>\r\n                            {this.state.shareholder_nameError}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* <div className=\"col-md-6 col-xl-5\"></div> */}\r\n                      <div className='col-md-12 col-xl-5'>\r\n                        <input\r\n                          type='submit'\r\n                          name='submit'\r\n                          className='btn btn-primary w-100 btn-lg show-opt'\r\n                          value='Submit'\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default DocumentsDeclaration;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\services\\service.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\services\\const.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\KycSuccess.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-zotto\\src\\Views\\RestrictUser.js",["199"],"import Restrict from './restrict.png';\r\nconst RestrictUser = () => {\r\n  return (\r\n    <>\r\n      <div className='restrict-container'>\r\n        <img\r\n          src={Restrict}\r\n          height='150px'\r\n          width='150px'\r\n          style={{\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            display: 'block',\r\n          }}\r\n        />\r\n        <br />\r\n        <p className='restrict-user'>\r\n          You don't have permission to view this page\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default RestrictUser;\r\n","C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\index.js",["200","201"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Routes.js",["202"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\KycSuccess.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\index.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\CustomerDetails.js",["203","204","205","206","207","208","209","210","211","212"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\BusinessDetails.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\DocumentsDeclaration.js",["245","246","247","248","249","250"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\RestrictUser.js",["251"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\services\\service.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\services\\const.js",[],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\BusinessProperty.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\PrincipalOwner.js",["266","267","268","269","270","271","272","273","274","275","276","277","278"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\ProcessingInformation.js",["279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304"],"C:\\Users\\bhavesh singh\\Documents\\Zotto_projects\\kyc-loans\\src\\Views\\MerchantQuestionnaire.js",["305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332"],{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","severity":1,"message":"338","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":26},{"ruleId":"337","severity":1,"message":"341","line":9,"column":10,"nodeType":"339","messageId":"340","endLine":9,"endColumn":14},{"ruleId":"337","severity":1,"message":"342","line":11,"column":8,"nodeType":"339","messageId":"340","endLine":11,"endColumn":13},{"ruleId":"337","severity":1,"message":"343","line":17,"column":7,"nodeType":"339","messageId":"340","endLine":17,"endColumn":14},{"ruleId":"337","severity":1,"message":"344","line":44,"column":7,"nodeType":"339","messageId":"340","endLine":44,"endColumn":14},{"ruleId":"345","severity":1,"message":"346","line":44,"column":17,"nodeType":"347","endLine":44,"endColumn":40},{"ruleId":"348","severity":1,"message":"349","line":110,"column":25,"nodeType":"350","messageId":"351","endLine":110,"endColumn":27},{"ruleId":"337","severity":1,"message":"352","line":181,"column":17,"nodeType":"339","messageId":"340","endLine":181,"endColumn":26},{"ruleId":"353","severity":1,"message":"354","line":204,"column":59,"nodeType":"355","messageId":"356","endLine":204,"endColumn":61},{"ruleId":"357","severity":1,"message":"358","line":251,"column":9,"nodeType":"339","messageId":"359","endLine":251,"endColumn":14},{"ruleId":"357","severity":1,"message":"360","line":254,"column":9,"nodeType":"339","messageId":"359","endLine":254,"endColumn":13},{"ruleId":"357","severity":1,"message":"361","line":258,"column":9,"nodeType":"339","messageId":"359","endLine":258,"endColumn":15},{"ruleId":"348","severity":1,"message":"349","line":390,"column":27,"nodeType":"350","messageId":"351","endLine":390,"endColumn":29},{"ruleId":"348","severity":1,"message":"349","line":391,"column":25,"nodeType":"350","messageId":"351","endLine":391,"endColumn":27},{"ruleId":"348","severity":1,"message":"349","line":426,"column":32,"nodeType":"350","messageId":"351","endLine":426,"endColumn":34},{"ruleId":"357","severity":1,"message":"358","line":427,"column":13,"nodeType":"339","messageId":"359","endLine":427,"endColumn":18},{"ruleId":"357","severity":1,"message":"360","line":428,"column":13,"nodeType":"339","messageId":"359","endLine":428,"endColumn":17},{"ruleId":"357","severity":1,"message":"361","line":432,"column":13,"nodeType":"339","messageId":"359","endLine":432,"endColumn":19},{"ruleId":"337","severity":1,"message":"362","line":517,"column":17,"nodeType":"339","messageId":"340","endLine":517,"endColumn":23},{"ruleId":"337","severity":1,"message":"363","line":519,"column":17,"nodeType":"339","messageId":"340","endLine":519,"endColumn":23},{"ruleId":"337","severity":1,"message":"364","line":521,"column":17,"nodeType":"339","messageId":"340","endLine":521,"endColumn":25},{"ruleId":"337","severity":1,"message":"365","line":523,"column":17,"nodeType":"339","messageId":"340","endLine":523,"endColumn":21},{"ruleId":"337","severity":1,"message":"366","line":573,"column":9,"nodeType":"339","messageId":"340","endLine":573,"endColumn":18},{"ruleId":"348","severity":1,"message":"349","line":610,"column":7,"nodeType":"350","messageId":"351","endLine":610,"endColumn":9},{"ruleId":"345","severity":1,"message":"367","line":654,"column":6,"nodeType":"368","endLine":654,"endColumn":8,"suggestions":"369"},{"ruleId":"348","severity":1,"message":"349","line":866,"column":48,"nodeType":"350","messageId":"351","endLine":866,"endColumn":50},{"ruleId":"348","severity":1,"message":"349","line":888,"column":47,"nodeType":"350","messageId":"351","endLine":888,"endColumn":49},{"ruleId":"348","severity":1,"message":"349","line":906,"column":47,"nodeType":"350","messageId":"351","endLine":906,"endColumn":49},{"ruleId":"348","severity":1,"message":"349","line":923,"column":48,"nodeType":"350","messageId":"351","endLine":923,"endColumn":50},{"ruleId":"348","severity":1,"message":"349","line":941,"column":48,"nodeType":"350","messageId":"351","endLine":941,"endColumn":50},{"ruleId":"348","severity":1,"message":"349","line":961,"column":47,"nodeType":"350","messageId":"351","endLine":961,"endColumn":49},{"ruleId":"337","severity":1,"message":"370","line":1,"column":28,"nodeType":"339","messageId":"340","endLine":1,"endColumn":37},{"ruleId":"337","severity":1,"message":"371","line":49,"column":9,"nodeType":"339","messageId":"340","endLine":49,"endColumn":14},{"ruleId":"337","severity":1,"message":"372","line":255,"column":9,"nodeType":"339","messageId":"340","endLine":255,"endColumn":14},{"ruleId":"348","severity":1,"message":"349","line":257,"column":16,"nodeType":"350","messageId":"351","endLine":257,"endColumn":18},{"ruleId":"348","severity":1,"message":"349","line":292,"column":25,"nodeType":"350","messageId":"351","endLine":292,"endColumn":27},{"ruleId":"357","severity":1,"message":"373","line":322,"column":13,"nodeType":"339","messageId":"359","endLine":322,"endColumn":21},{"ruleId":"337","severity":1,"message":"338","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":26},{"ruleId":"337","severity":1,"message":"374","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":15},{"ruleId":"337","severity":1,"message":"375","line":34,"column":11,"nodeType":"339","messageId":"340","endLine":34,"endColumn":12},{"ruleId":"337","severity":1,"message":"376","line":77,"column":11,"nodeType":"339","messageId":"340","endLine":77,"endColumn":22},{"ruleId":"357","severity":1,"message":"358","line":161,"column":9,"nodeType":"339","messageId":"359","endLine":161,"endColumn":14},{"ruleId":"357","severity":1,"message":"360","line":164,"column":9,"nodeType":"339","messageId":"359","endLine":164,"endColumn":13},{"ruleId":"357","severity":1,"message":"361","line":168,"column":9,"nodeType":"339","messageId":"359","endLine":168,"endColumn":15},{"ruleId":"337","severity":1,"message":"377","line":199,"column":20,"nodeType":"339","messageId":"340","endLine":199,"endColumn":31},{"ruleId":"337","severity":1,"message":"378","line":219,"column":9,"nodeType":"339","messageId":"340","endLine":219,"endColumn":10},{"ruleId":"348","severity":1,"message":"349","line":274,"column":11,"nodeType":"350","messageId":"351","endLine":274,"endColumn":13},{"ruleId":"348","severity":1,"message":"349","line":276,"column":18,"nodeType":"350","messageId":"351","endLine":276,"endColumn":20},{"ruleId":"345","severity":1,"message":"379","line":293,"column":6,"nodeType":"368","endLine":293,"endColumn":8,"suggestions":"380"},{"ruleId":"337","severity":1,"message":"338","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":26},{"ruleId":"337","severity":1,"message":"375","line":31,"column":11,"nodeType":"339","messageId":"340","endLine":31,"endColumn":12},{"ruleId":"348","severity":1,"message":"381","line":56,"column":56,"nodeType":"350","messageId":"351","endLine":56,"endColumn":58},{"ruleId":"337","severity":1,"message":"376","line":69,"column":11,"nodeType":"339","messageId":"340","endLine":69,"endColumn":22},{"ruleId":"337","severity":1,"message":"382","line":82,"column":13,"nodeType":"339","messageId":"340","endLine":82,"endColumn":25},{"ruleId":"357","severity":1,"message":"358","line":145,"column":9,"nodeType":"339","messageId":"359","endLine":145,"endColumn":14},{"ruleId":"357","severity":1,"message":"360","line":148,"column":9,"nodeType":"339","messageId":"359","endLine":148,"endColumn":13},{"ruleId":"357","severity":1,"message":"361","line":152,"column":9,"nodeType":"339","messageId":"359","endLine":152,"endColumn":15},{"ruleId":"348","severity":1,"message":"349","line":245,"column":11,"nodeType":"350","messageId":"351","endLine":245,"endColumn":13},{"ruleId":"348","severity":1,"message":"349","line":247,"column":18,"nodeType":"350","messageId":"351","endLine":247,"endColumn":20},{"ruleId":"345","severity":1,"message":"379","line":262,"column":6,"nodeType":"368","endLine":262,"endColumn":8,"suggestions":"383"},{"ruleId":"348","severity":1,"message":"349","line":411,"column":47,"nodeType":"350","messageId":"351","endLine":411,"endColumn":49},{"ruleId":"348","severity":1,"message":"349","line":431,"column":45,"nodeType":"350","messageId":"351","endLine":431,"endColumn":47},{"ruleId":"337","severity":1,"message":"384","line":6,"column":8,"nodeType":"339","messageId":"340","endLine":6,"endColumn":21},{"ruleId":"348","severity":1,"message":"349","line":17,"column":19,"nodeType":"350","messageId":"351","endLine":17,"endColumn":21},{"ruleId":"337","severity":1,"message":"375","line":161,"column":11,"nodeType":"339","messageId":"340","endLine":161,"endColumn":12},{"ruleId":"353","severity":1,"message":"354","line":170,"column":48,"nodeType":"355","messageId":"356","endLine":170,"endColumn":50},{"ruleId":"348","severity":1,"message":"349","line":353,"column":32,"nodeType":"350","messageId":"351","endLine":353,"endColumn":34},{"ruleId":"348","severity":1,"message":"349","line":436,"column":32,"nodeType":"350","messageId":"351","endLine":436,"endColumn":34},{"ruleId":"337","severity":1,"message":"385","line":538,"column":11,"nodeType":"339","messageId":"340","endLine":538,"endColumn":18},{"ruleId":"337","severity":1,"message":"386","line":543,"column":9,"nodeType":"339","messageId":"340","endLine":543,"endColumn":10},{"ruleId":"337","severity":1,"message":"375","line":546,"column":11,"nodeType":"339","messageId":"340","endLine":546,"endColumn":12},{"ruleId":"337","severity":1,"message":"374","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":15},{"ruleId":"337","severity":1,"message":"387","line":3,"column":8,"nodeType":"339","messageId":"340","endLine":3,"endColumn":23},{"ruleId":"337","severity":1,"message":"388","line":4,"column":8,"nodeType":"339","messageId":"340","endLine":4,"endColumn":19},{"ruleId":"337","severity":1,"message":"389","line":7,"column":10,"nodeType":"339","messageId":"340","endLine":7,"endColumn":26},{"ruleId":"348","severity":1,"message":"349","line":37,"column":19,"nodeType":"350","messageId":"351","endLine":37,"endColumn":21},{"ruleId":"337","severity":1,"message":"390","line":60,"column":9,"nodeType":"339","messageId":"340","endLine":60,"endColumn":11},{"ruleId":"337","severity":1,"message":"390","line":220,"column":9,"nodeType":"339","messageId":"340","endLine":220,"endColumn":11},{"ruleId":"391","severity":1,"message":"392","line":6,"column":9,"nodeType":"393","endLine":15,"endColumn":11},{"ruleId":"337","severity":1,"message":"394","line":3,"column":8,"nodeType":"339","messageId":"340","endLine":3,"endColumn":22},{"ruleId":"357","severity":1,"message":"361","line":45,"column":11,"nodeType":"339","messageId":"359","endLine":45,"endColumn":17},{"ruleId":"337","severity":1,"message":"395","line":7,"column":3,"nodeType":"339","messageId":"340","endLine":7,"endColumn":19},{"ruleId":"337","severity":1,"message":"338","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":26},{"ruleId":"337","severity":1,"message":"396","line":13,"column":8,"nodeType":"339","messageId":"340","endLine":13,"endColumn":14},{"ruleId":"337","severity":1,"message":"371","line":47,"column":9,"nodeType":"339","messageId":"340","endLine":47,"endColumn":14},{"ruleId":"348","severity":1,"message":"349","line":143,"column":35,"nodeType":"350","messageId":"351","endLine":143,"endColumn":37},{"ruleId":"337","severity":1,"message":"372","line":240,"column":9,"nodeType":"339","messageId":"340","endLine":240,"endColumn":14},{"ruleId":"348","severity":1,"message":"349","line":245,"column":16,"nodeType":"350","messageId":"351","endLine":245,"endColumn":18},{"ruleId":"348","severity":1,"message":"349","line":279,"column":25,"nodeType":"350","messageId":"351","endLine":279,"endColumn":27},{"ruleId":"357","severity":1,"message":"373","line":307,"column":13,"nodeType":"339","messageId":"359","endLine":307,"endColumn":21},{"ruleId":"345","severity":1,"message":"397","line":512,"column":6,"nodeType":"368","endLine":512,"endColumn":8,"suggestions":"398"},{"ruleId":"337","severity":1,"message":"399","line":573,"column":33,"nodeType":"339","messageId":"340","endLine":573,"endColumn":36},{"ruleId":"337","severity":1,"message":"338","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":26},{"ruleId":"337","severity":1,"message":"400","line":3,"column":10,"nodeType":"339","messageId":"340","endLine":3,"endColumn":25},{"ruleId":"337","severity":1,"message":"341","line":9,"column":10,"nodeType":"339","messageId":"340","endLine":9,"endColumn":14},{"ruleId":"337","severity":1,"message":"342","line":11,"column":8,"nodeType":"339","messageId":"340","endLine":11,"endColumn":13},{"ruleId":"337","severity":1,"message":"343","line":18,"column":7,"nodeType":"339","messageId":"340","endLine":18,"endColumn":14},{"ruleId":"337","severity":1,"message":"344","line":19,"column":7,"nodeType":"339","messageId":"340","endLine":19,"endColumn":14},{"ruleId":"348","severity":1,"message":"349","line":60,"column":47,"nodeType":"350","messageId":"351","endLine":60,"endColumn":49},{"ruleId":"348","severity":1,"message":"349","line":64,"column":51,"nodeType":"350","messageId":"351","endLine":64,"endColumn":53},{"ruleId":"348","severity":1,"message":"349","line":69,"column":57,"nodeType":"350","messageId":"351","endLine":69,"endColumn":59},{"ruleId":"348","severity":1,"message":"349","line":78,"column":42,"nodeType":"350","messageId":"351","endLine":78,"endColumn":44},{"ruleId":"348","severity":1,"message":"349","line":83,"column":49,"nodeType":"350","messageId":"351","endLine":83,"endColumn":51},{"ruleId":"357","severity":1,"message":"358","line":137,"column":9,"nodeType":"339","messageId":"359","endLine":137,"endColumn":14},{"ruleId":"357","severity":1,"message":"360","line":140,"column":9,"nodeType":"339","messageId":"359","endLine":140,"endColumn":13},{"ruleId":"357","severity":1,"message":"361","line":145,"column":9,"nodeType":"339","messageId":"359","endLine":145,"endColumn":15},{"ruleId":"337","severity":1,"message":"401","line":273,"column":9,"nodeType":"339","messageId":"340","endLine":273,"endColumn":23},{"ruleId":"348","severity":1,"message":"349","line":277,"column":27,"nodeType":"350","messageId":"351","endLine":277,"endColumn":29},{"ruleId":"348","severity":1,"message":"349","line":278,"column":25,"nodeType":"350","messageId":"351","endLine":278,"endColumn":27},{"ruleId":"348","severity":1,"message":"349","line":313,"column":32,"nodeType":"350","messageId":"351","endLine":313,"endColumn":34},{"ruleId":"357","severity":1,"message":"358","line":314,"column":13,"nodeType":"339","messageId":"359","endLine":314,"endColumn":18},{"ruleId":"357","severity":1,"message":"360","line":315,"column":13,"nodeType":"339","messageId":"359","endLine":315,"endColumn":17},{"ruleId":"357","severity":1,"message":"361","line":319,"column":13,"nodeType":"339","messageId":"359","endLine":319,"endColumn":19},{"ruleId":"337","severity":1,"message":"362","line":404,"column":17,"nodeType":"339","messageId":"340","endLine":404,"endColumn":23},{"ruleId":"337","severity":1,"message":"363","line":406,"column":17,"nodeType":"339","messageId":"340","endLine":406,"endColumn":23},{"ruleId":"337","severity":1,"message":"364","line":408,"column":17,"nodeType":"339","messageId":"340","endLine":408,"endColumn":25},{"ruleId":"337","severity":1,"message":"365","line":410,"column":17,"nodeType":"339","messageId":"340","endLine":410,"endColumn":21},{"ruleId":"337","severity":1,"message":"402","line":453,"column":9,"nodeType":"339","messageId":"340","endLine":453,"endColumn":22},{"ruleId":"337","severity":1,"message":"366","line":460,"column":9,"nodeType":"339","messageId":"340","endLine":460,"endColumn":18},{"ruleId":"348","severity":1,"message":"349","line":497,"column":7,"nodeType":"350","messageId":"351","endLine":497,"endColumn":9},{"ruleId":"345","severity":1,"message":"403","line":523,"column":6,"nodeType":"368","endLine":523,"endColumn":8,"suggestions":"404"},{"ruleId":"348","severity":1,"message":"349","line":577,"column":46,"nodeType":"350","messageId":"351","endLine":577,"endColumn":48},{"ruleId":"348","severity":1,"message":"349","line":600,"column":48,"nodeType":"350","messageId":"351","endLine":600,"endColumn":50},{"ruleId":"348","severity":1,"message":"349","line":622,"column":51,"nodeType":"350","messageId":"351","endLine":622,"endColumn":53},{"ruleId":"337","severity":1,"message":"374","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":15},{"ruleId":"337","severity":1,"message":"387","line":3,"column":8,"nodeType":"339","messageId":"340","endLine":3,"endColumn":23},{"ruleId":"337","severity":1,"message":"388","line":4,"column":8,"nodeType":"339","messageId":"340","endLine":4,"endColumn":19},{"ruleId":"337","severity":1,"message":"389","line":7,"column":10,"nodeType":"339","messageId":"340","endLine":7,"endColumn":26},{"ruleId":"348","severity":1,"message":"349","line":36,"column":19,"nodeType":"350","messageId":"351","endLine":36,"endColumn":21},{"ruleId":"337","severity":1,"message":"390","line":61,"column":9,"nodeType":"339","messageId":"340","endLine":61,"endColumn":11},{"ruleId":"391","severity":1,"message":"392","line":6,"column":9,"nodeType":"393","endLine":15,"endColumn":11},{"ruleId":"337","severity":1,"message":"338","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":26},{"ruleId":"337","severity":1,"message":"374","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":15},{"ruleId":"337","severity":1,"message":"388","line":3,"column":8,"nodeType":"339","messageId":"340","endLine":3,"endColumn":19},{"ruleId":"348","severity":1,"message":"349","line":35,"column":67,"nodeType":"350","messageId":"351","endLine":35,"endColumn":69},{"ruleId":"348","severity":1,"message":"349","line":42,"column":51,"nodeType":"350","messageId":"351","endLine":42,"endColumn":53},{"ruleId":"348","severity":1,"message":"349","line":50,"column":53,"nodeType":"350","messageId":"351","endLine":50,"endColumn":55},{"ruleId":"357","severity":1,"message":"358","line":98,"column":9,"nodeType":"339","messageId":"359","endLine":98,"endColumn":14},{"ruleId":"357","severity":1,"message":"360","line":101,"column":9,"nodeType":"339","messageId":"359","endLine":101,"endColumn":13},{"ruleId":"357","severity":1,"message":"361","line":106,"column":9,"nodeType":"339","messageId":"359","endLine":106,"endColumn":15},{"ruleId":"348","severity":1,"message":"349","line":149,"column":7,"nodeType":"350","messageId":"351","endLine":149,"endColumn":9},{"ruleId":"345","severity":1,"message":"403","line":177,"column":6,"nodeType":"368","endLine":177,"endColumn":8,"suggestions":"405"},{"ruleId":"348","severity":1,"message":"349","line":224,"column":56,"nodeType":"350","messageId":"351","endLine":224,"endColumn":58},{"ruleId":"348","severity":1,"message":"349","line":251,"column":48,"nodeType":"350","messageId":"351","endLine":251,"endColumn":50},{"ruleId":"348","severity":1,"message":"349","line":294,"column":49,"nodeType":"350","messageId":"351","endLine":294,"endColumn":51},{"ruleId":"337","severity":1,"message":"384","line":6,"column":8,"nodeType":"339","messageId":"340","endLine":6,"endColumn":21},{"ruleId":"348","severity":1,"message":"349","line":17,"column":19,"nodeType":"350","messageId":"351","endLine":17,"endColumn":21},{"ruleId":"348","severity":1,"message":"349","line":123,"column":49,"nodeType":"350","messageId":"351","endLine":123,"endColumn":51},{"ruleId":"337","severity":1,"message":"375","line":173,"column":11,"nodeType":"339","messageId":"340","endLine":173,"endColumn":12},{"ruleId":"353","severity":1,"message":"354","line":187,"column":48,"nodeType":"355","messageId":"356","endLine":187,"endColumn":50},{"ruleId":"348","severity":1,"message":"349","line":188,"column":42,"nodeType":"350","messageId":"351","endLine":188,"endColumn":44},{"ruleId":"348","severity":1,"message":"349","line":189,"column":38,"nodeType":"350","messageId":"351","endLine":189,"endColumn":40},{"ruleId":"348","severity":1,"message":"349","line":190,"column":42,"nodeType":"350","messageId":"351","endLine":190,"endColumn":44},{"ruleId":"348","severity":1,"message":"349","line":394,"column":32,"nodeType":"350","messageId":"351","endLine":394,"endColumn":34},{"ruleId":"348","severity":1,"message":"349","line":477,"column":32,"nodeType":"350","messageId":"351","endLine":477,"endColumn":34},{"ruleId":"337","severity":1,"message":"385","line":553,"column":11,"nodeType":"339","messageId":"340","endLine":553,"endColumn":18},{"ruleId":"337","severity":1,"message":"386","line":558,"column":9,"nodeType":"339","messageId":"340","endLine":558,"endColumn":10},{"ruleId":"337","severity":1,"message":"375","line":561,"column":11,"nodeType":"339","messageId":"340","endLine":561,"endColumn":12},{"ruleId":"337","severity":1,"message":"338","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":26},{"ruleId":"337","severity":1,"message":"374","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":15},{"ruleId":"337","severity":1,"message":"400","line":3,"column":10,"nodeType":"339","messageId":"340","endLine":3,"endColumn":25},{"ruleId":"337","severity":1,"message":"388","line":4,"column":8,"nodeType":"339","messageId":"340","endLine":4,"endColumn":19},{"ruleId":"337","severity":1,"message":"341","line":9,"column":10,"nodeType":"339","messageId":"340","endLine":9,"endColumn":14},{"ruleId":"337","severity":1,"message":"342","line":11,"column":8,"nodeType":"339","messageId":"340","endLine":11,"endColumn":13},{"ruleId":"337","severity":1,"message":"406","line":17,"column":7,"nodeType":"339","messageId":"340","endLine":17,"endColumn":18},{"ruleId":"337","severity":1,"message":"343","line":18,"column":7,"nodeType":"339","messageId":"340","endLine":18,"endColumn":14},{"ruleId":"337","severity":1,"message":"344","line":19,"column":7,"nodeType":"339","messageId":"340","endLine":19,"endColumn":14},{"ruleId":"348","severity":1,"message":"349","line":64,"column":40,"nodeType":"350","messageId":"351","endLine":64,"endColumn":42},{"ruleId":"348","severity":1,"message":"349","line":72,"column":63,"nodeType":"350","messageId":"351","endLine":72,"endColumn":65},{"ruleId":"348","severity":1,"message":"349","line":80,"column":65,"nodeType":"350","messageId":"351","endLine":80,"endColumn":67},{"ruleId":"348","severity":1,"message":"349","line":87,"column":51,"nodeType":"350","messageId":"351","endLine":87,"endColumn":53},{"ruleId":"348","severity":1,"message":"349","line":91,"column":51,"nodeType":"350","messageId":"351","endLine":91,"endColumn":53},{"ruleId":"348","severity":1,"message":"349","line":95,"column":71,"nodeType":"350","messageId":"351","endLine":95,"endColumn":73},{"ruleId":"357","severity":1,"message":"358","line":151,"column":9,"nodeType":"339","messageId":"359","endLine":151,"endColumn":14},{"ruleId":"357","severity":1,"message":"360","line":154,"column":9,"nodeType":"339","messageId":"359","endLine":154,"endColumn":13},{"ruleId":"357","severity":1,"message":"361","line":159,"column":9,"nodeType":"339","messageId":"359","endLine":159,"endColumn":15},{"ruleId":"348","severity":1,"message":"349","line":289,"column":7,"nodeType":"350","messageId":"351","endLine":289,"endColumn":9},{"ruleId":"345","severity":1,"message":"403","line":317,"column":6,"nodeType":"368","endLine":317,"endColumn":8,"suggestions":"407"},{"ruleId":"348","severity":1,"message":"349","line":378,"column":62,"nodeType":"350","messageId":"351","endLine":378,"endColumn":64},{"ruleId":"348","severity":1,"message":"349","line":405,"column":54,"nodeType":"350","messageId":"351","endLine":405,"endColumn":56},{"ruleId":"348","severity":1,"message":"349","line":432,"column":55,"nodeType":"350","messageId":"351","endLine":432,"endColumn":57},{"ruleId":"348","severity":1,"message":"349","line":458,"column":48,"nodeType":"350","messageId":"351","endLine":458,"endColumn":50},{"ruleId":"348","severity":1,"message":"349","line":482,"column":48,"nodeType":"350","messageId":"351","endLine":482,"endColumn":50},{"ruleId":"348","severity":1,"message":"349","line":507,"column":58,"nodeType":"350","messageId":"351","endLine":507,"endColumn":60},{"ruleId":"337","severity":1,"message":"338","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":26},{"ruleId":"337","severity":1,"message":"374","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":15},{"ruleId":"337","severity":1,"message":"400","line":3,"column":10,"nodeType":"339","messageId":"340","endLine":3,"endColumn":25},{"ruleId":"337","severity":1,"message":"388","line":4,"column":8,"nodeType":"339","messageId":"340","endLine":4,"endColumn":19},{"ruleId":"337","severity":1,"message":"341","line":9,"column":10,"nodeType":"339","messageId":"340","endLine":9,"endColumn":14},{"ruleId":"337","severity":1,"message":"342","line":11,"column":8,"nodeType":"339","messageId":"340","endLine":11,"endColumn":13},{"ruleId":"337","severity":1,"message":"406","line":17,"column":7,"nodeType":"339","messageId":"340","endLine":17,"endColumn":18},{"ruleId":"337","severity":1,"message":"343","line":18,"column":7,"nodeType":"339","messageId":"340","endLine":18,"endColumn":14},{"ruleId":"348","severity":1,"message":"349","line":41,"column":7,"nodeType":"350","messageId":"351","endLine":41,"endColumn":9},{"ruleId":"337","severity":1,"message":"344","line":43,"column":7,"nodeType":"339","messageId":"340","endLine":43,"endColumn":14},{"ruleId":"345","severity":1,"message":"346","line":43,"column":17,"nodeType":"347","endLine":43,"endColumn":40},{"ruleId":"348","severity":1,"message":"349","line":67,"column":35,"nodeType":"350","messageId":"351","endLine":67,"endColumn":37},{"ruleId":"348","severity":1,"message":"349","line":74,"column":35,"nodeType":"350","messageId":"351","endLine":74,"endColumn":37},{"ruleId":"348","severity":1,"message":"349","line":82,"column":35,"nodeType":"350","messageId":"351","endLine":82,"endColumn":37},{"ruleId":"348","severity":1,"message":"349","line":89,"column":35,"nodeType":"350","messageId":"351","endLine":89,"endColumn":37},{"ruleId":"348","severity":1,"message":"349","line":93,"column":35,"nodeType":"350","messageId":"351","endLine":93,"endColumn":37},{"ruleId":"348","severity":1,"message":"349","line":97,"column":35,"nodeType":"350","messageId":"351","endLine":97,"endColumn":37},{"ruleId":"348","severity":1,"message":"349","line":104,"column":35,"nodeType":"350","messageId":"351","endLine":104,"endColumn":37},{"ruleId":"348","severity":1,"message":"349","line":111,"column":35,"nodeType":"350","messageId":"351","endLine":111,"endColumn":37},{"ruleId":"357","severity":1,"message":"358","line":166,"column":9,"nodeType":"339","messageId":"359","endLine":166,"endColumn":14},{"ruleId":"357","severity":1,"message":"360","line":169,"column":9,"nodeType":"339","messageId":"359","endLine":169,"endColumn":13},{"ruleId":"357","severity":1,"message":"361","line":174,"column":9,"nodeType":"339","messageId":"359","endLine":174,"endColumn":15},{"ruleId":"348","severity":1,"message":"349","line":284,"column":49,"nodeType":"350","messageId":"351","endLine":284,"endColumn":51},{"ruleId":"348","severity":1,"message":"349","line":340,"column":49,"nodeType":"350","messageId":"351","endLine":340,"endColumn":51},{"ruleId":"348","severity":1,"message":"349","line":383,"column":49,"nodeType":"350","messageId":"351","endLine":383,"endColumn":51},{"ruleId":"348","severity":1,"message":"349","line":423,"column":49,"nodeType":"350","messageId":"351","endLine":423,"endColumn":51},{"ruleId":"348","severity":1,"message":"349","line":569,"column":49,"nodeType":"350","messageId":"351","endLine":569,"endColumn":51},{"ruleId":"348","severity":1,"message":"349","line":609,"column":49,"nodeType":"350","messageId":"351","endLine":609,"endColumn":51},"no-native-reassign",["408"],"no-negated-in-lhs",["409"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'stat' is defined but never used.","'axios' is defined but never used.","'company' is assigned a value but never used.","'country' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'country' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'prev_data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'axios' is already defined.","redeclared","'data' is already defined.","'config' is already defined.","'addr_1' is assigned a value but never used.","'addr_2' is assigned a value but never used.","'postcode' is assigned a value but never used.","'city' is assigned a value but never used.","'setValues' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'restrict' and 'x'. Either include them or remove the dependency array.","ArrayExpression",["410"],"'useEffect' is defined but never used.","'Email' is assigned a value but never used.","'axios' is assigned a value but never used.","'formData' is already defined.","'Service' is defined but never used.","'y' is assigned a value but never used.","'PostDetails' is assigned a value but never used.","'setdropdown' is assigned a value but never used.","'x' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'restrict', 'setValues', 'state', and 'x'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["411"],"Expected '!==' and instead saw '!='.","'no_of_charge' is assigned a value but never used.",["412"],"'ShortUniqueId' is defined but never used.","'shortid' is assigned a value but never used.","'a' is assigned a value but never used.","'SignatureCanvas' is defined but never used.","'localforage' is defined but never used.","'createReadStream' is defined but never used.","'id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'zottoLoansLogo' is defined but never used.","'OwnershipDetails' is defined but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["413"],"'phh' is assigned a value but never used.","'CountryDropdown' is defined but never used.","'getCompanyData' is assigned a value but never used.","'selectCountry' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'restrict', 'state', and 'x'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["414"],["415"],"'countryCode' is assigned a value but never used.",["416"],"no-global-assign","no-unsafe-negation",{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"419","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"424","fix":"426"},{"desc":"424","fix":"427"},"Update the dependencies array to be: [restrict, x]",{"range":"428","text":"429"},"Update the dependencies array to be: [restrict, setValues, state, x]",{"range":"430","text":"431"},{"range":"432","text":"431"},"Update the dependencies array to be: [state]",{"range":"433","text":"434"},"Update the dependencies array to be: [restrict, state, x]",{"range":"435","text":"436"},{"range":"437","text":"436"},{"range":"438","text":"436"},[21463,21465],"[restrict, x]",[9547,9549],"[restrict, setValues, state, x]",[8306,8308],[15854,15856],"[state]",[17171,17173],"[restrict, state, x]",[5725,5727],[10364,10366]]